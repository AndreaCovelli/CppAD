// BEGIN SHORT COPYRIGHT
/* -----------------------------------------------------------------------
CppAD: C++ Algorithm Differentiation: Copyright (C) 2003-05 Bradley M. Bell

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
------------------------------------------------------------------------ */
// END SHORT COPYRIGHT

$begin glossary$$
$aindex head subhead$$
$spell
	bool
	Op
	Diff
	Var
	Cpp
	enum
	Taylor
$$

$section Glossary$$

$head Base Function$$
If $italic Base$$ is a C++ class,
a function $latex f$$ is referred to as a $italic Base$$ function
if its domain and range are finite dimensional vector with components in the
space represented by $italic Base$$; i.e. $latex f : B^n \rightarrow B^m$$.

$head Base Type$$
If $italic x$$ is an $syntax%AD<%Base%>%$$ object,
$italic Base$$ is referred to as the base type for $italic x$$.

$head Dependent Variable$$
An $syntax%AD<%Base%>%$$ object is a dependent variable
if it is a variable and is not an independent variable.

$head Elementary Vector$$
The $th j$$ elementary vector $latex u \in B^m$$ is defined by
$latex \[
u_i = \left\{ \begin{array}{ll}
	1 & {\rm if} \; i = j \\
	0 & {\rm otherwise}
\end{array} \right.
\] $$


$head Independent Variable$$
The set of independent variables are specified by
the $xref/Independent/$$ function call
that starts recording operations on the corresponding tape.

$head Parameter$$
All $italic Base$$ objects are always parameters.
An $syntax%AD<%Base%>%$$ object is currently a parameter if
it is not currently a variable.
All $syntax%AD<%Base%>%$$ objects are currently parameters
when the tape is in the Empty state.
An $syntax%AD<%Base%>%$$ object $italic x$$ is 
currently a parameter if and only if
$xref/Parameter//Parameter(x)/$$ is true.
$pre

$$
Note that we often drop the word currently and 
just refer to an $syntax%AD<%Base%>%$$ object as a variable
or parameter.

$head Sparsity Pattern$$
$index sparsity, pattern$$
$index pattern, sparsity$$
Given a function a matrix 
$latex A \in B^{p \times q}$$.
a boolean valued $latex p \times q$$ matrix $latex P$$ is a 
sparsity pattern for $latex A$$ if 
for $latex i = 1, \ldots , p$$ and $latex j = 1 , \ldots q$$,
$latex \[
[ P_{i,j} = {\rm false} ]
\; \Rightarrow \; 
[ A_{i,j} (x) = 0  , {\rm \; for \; all \;} x \in B^n ]
\] $$
Given two sparsity patterns $latex P$$ and $italic Q$$ 
for a matrix $italic A$$, we say that $italic P$$ is more efficient than
$italic Q$$ if $italic P$$ has fewer true elements than $italic Q$$.
 
$head Tape State$$
For each class $italic Base$$,
the tape that records 
$syntax%AD<%Base%>%$$ 
operations has two possible states:
$codep
	enum TapeState {
		Empty,
		Recording,
	}
$$
The tape is initially in the $code Empty$$ state.
It is in the recording state after each call to 
$xref/Independent/$$ with a $syntax%AD<%Base%>%$$ argument.
It is in the $code Empty$$ state after each call to
$xref/ADFun//ADFun<Base>/$$.


$subhead Empty$$
The tape is empty 
(hence all $syntax%AD<%Base%>%$$ objects are parameters).
The tape is initially in this state and it enters this state whenever a
$xref/ADFun//ADFun/$$ object is constructed.

$subhead Recording$$
All of the independent variables have been specified
and the tape is currently recording the operations that define
the more variables as $italic Base$$ scalar functions of the
independent variables.
The tape enters this state when a
$xref/Independent/$$ calculation is preformed.

$head Taylor Coefficient$$
Suppose $latex X : B \rightarrow B^n$$ is a 
is $latex p$$ times continuously differentiable function
in some neighborhood of zero.
For $latex k = 0 , \ldots , p$$, 
we use the column vector $latex x^{(k)} \in B^n$$ for the $th k$$ order 
Taylor coefficient corresponding to $latex X$$ 
which is defined by
$latex \[
	x^{(k)} = \frac{1}{k !} \Dpow{k}{t} X(0)
\] $$
It follows that 
$latex \[
	X(t) = x^{(0)} + x^{(1)} t + \cdots + x^{(p)} t^p  + R(t)
\]$$
where the remainder $latex R(t)$$ divided by $latex t^p$$ 
converges to zero and $latex t$$ goes to zero.


$head Variable$$
An $syntax%AD<%Base%>%$$ object is currently a variable if
the corresponding tape is in the Recording state
and the current value of an $syntax%AD<%Base%>%$$ object 
depends on the value of at least one of the 
$xref/glossary/Independent Variable/independent/$$ variables.
An $syntax%AD<%Base%>%$$ object $italic x$$ is currently
a variable if and only if
$xref/Parameter//Parameter(x)/$$ is currently false.
For example,
directly after the code sequence
$syntax%
	Independent(%u%);
	AD<double> %x% = %u%[0];
%$$
the $syntax%AD<double>%$$ object $italic x$$ is currently a variable.
Directly after the code sequence
$syntax%
	Independent(%u%);
	AD<double> %x% = %u%[0];
	%x% = 5;
%$$
$italic x$$  is currently not a variable 
(it is currently a $xref/glossary/Parameter/parameter/$$).
$pre

$$
Note that we often drop the word currently and 
just refer to an $syntax%AD<%Base%>%$$ object as a variable
or parameter.

$end
