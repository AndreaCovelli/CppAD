/* --------------------------------------------------------------------------
CppAD: C++ Algorithmic Differentiation: Copyright (C) 2003-06 Bradley M. Bell

CppAD is distributed under multiple licenses. This distribution is under
the terms of the 
                    Common Public License Version 1.0.

A copy of this license is included in the COPYING file of this distribution.
Please visit http://www.coin-or.org/CppAD/ for information on other licenses.
-------------------------------------------------------------------------- */
$begin exp_apx_for$$
$spell
	exp_apx_for
$$

$section exp_apx: First Order Forward Mode$$

$index first, order forward$$
$index order, first forward$$
$index forward, first order$$

$head Mathematical Form$$
Suppose that we use the algorithm $xref/exp_apx.hpp/$$
to compute $latex {\rm exp\_apx} (x, e)$$ 
with $latex x$$ is equal to .5
and $latex e$$ is equal to .2. 
For this case, the 
$cref/exp_apx operation sequence/exp_apx_seq/Trace/Operation Sequence/$$
corresponds to the following function and partial derivative:
$latex \[
\begin{array}{rclll}
{\rm exp\_apx} (x, e) & = &   1 + x + x^2 / 2  
	& =   1 + .5 + .25 / 2 
	& =   1.625
\\
\partial_x {\rm exp\_apx} (x, e) & = &   1 + x 
	& =   1 + .5 
	& =   1.5
\end{array}
\] $$

$head First Order Forward$$
First order forward mode uses the 
$cref/operation sequence/exp_apx_seq/Trace/Operation Sequence/$$
and zero order forward sweep
$cref/values/exp_apx_seq/Trace/Zero Order Forward Value/$$
to compute the first order partial derivative
of all the dependent variables with respect to one independent variable. 
The computations are done in the same order as those in the 
original algorithm.
$pre

$$
The $code exp_apx$$ operation sequence depends on $italic e$$,
but for a given the operation sequence,
the values computed do not depend on $italic e$$.
Thus, the partial derivative with respect to $italic e$$,
of any of the variables in the operation sequence,
is zero.
We also note that the partial derivatives
with respect to $latex x$$ are zero for the following symbols:
$latex \[
	r_0 , s_0 , k_0 , k_1 , k_2 
\] $$
A first order forward mode sweep calculates the partial derivative 
with respect to $italic x$$
(of all the variables)
as follows:
$center
$table
$bold Operation$$ 
	$cnext $pre  $$ $cnext $bold Order 0 Value$$
	$cnext $pre  $$ $cnext $bold Partial$$
	$cnext $pre  $$ $cnext $bold Order 1 Value$$
$rnext
$latex a_0 = x $$
	$cnext $cnext = 0.5
	$cnext $cnext 
	$latex \partial_x a_0 = \partial_x x  $$
	$cnext $cnext = 1
$rnext
$latex q_1  = r_0 * a_0  $$
	$cnext $cnext = 0.5
	$cnext $cnext 
	$latex \partial_x q_1 = \partial_x r_0  * a_0 + r_0 * \partial_x a_0$$
	$cnext $cnext = 1
$rnext
$latex r_1  = q_1 / k_0  $$
	$cnext $cnext = 0.5
	$cnext $cnext 
	$latex \partial_x r_1 = \partial_x q_1 / k_0 $$
	$cnext $cnext = 1
$rnext
$latex s_1  = s_0 + r_1  $$
	$cnext $cnext = 1.5
	$cnext $cnext 
	$latex \partial_x s_1 = \partial_x s_0 + \partial_x r_1 $$
	$cnext $cnext = 1
$rnext
$latex q_2 =  r_1 * a_0 $$
	$cnext $cnext = 0.25
	$cnext $cnext 
	$latex \partial_x q_2 = \partial_x r_1  * a_0 + r_1 * \partial_x a_0 $$
	$cnext $cnext = 1
$rnext
$latex r_2 = q_2 / k_1 $$
	$cnext $cnext = 0.125
	$cnext $cnext 
	$latex \partial_x r_2 = \partial_x q_2 / k_1 $$
	$cnext $cnext = 0.5
$rnext
$latex s_2   = s_1 + r_2 $$
	$cnext $cnext = 1.625
	$cnext $cnext 
	$latex  \partial_x s_2 = \partial_x s_1 + \partial_x r_2 $$
	$cnext $cnext = 1.5
$tend
$$
Thus forward mode returns
1.5 as the derivative of the return value of the algorithm
for this case.


$children%
	introduction/exp_apx/exp_apx_for.cpp
%$$
$head Verification$$
The file $xref/exp_apx_for.cpp/$$ contains a routine 
which verifies the values computed above.
It returns true for success and false for failure.

$head Exercises$$
$list number$$
Suppose that $latex x = .1$$,
what is the result of a zero and first order forward mode sweep for 
the operation sequence above; 
i.e., what are the corresponding values for
$latex \[
\begin{array}{l}
	r_0, s_0, k_0, a_0, q_1, r_1, s_1, k_1, q_2, r_2, s_2
	\\
	\partial_x r_0, 
	\partial s_0, 
	\partial k_0, 
	\partial a_0, 
	\partial q_1, 
	\partial r_1, 
	\partial s_1, 
	\partial k_1, 
	\partial q_2, 
	\partial r_2, 
	\partial s_2
\end{array}
\]$$
$lnext
Suppose that $latex x = .1$$ and $latex e = .2$$,
what is the operation sequence corresponding to 
$syntax%
	exp_apx(%x%, %e%)
%$$
$lend

$end
