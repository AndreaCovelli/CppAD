# SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-or-later
# SPDX-FileCopyrightText: Bradley M. Bell <bradbell@seanet.com>
# SPDX-FileContributor: 2003-22 Bradley M. Bell
# ----------------------------------------------------------------------------
$begin omp_alloc$$
$spell
    openmp
    include/cppad/utility/omp_alloc.hpp
    CppAD
$$

$section A Quick OpenMP Memory Allocator Used by CppAD$$


$head Syntax$$
$code # include <cppad/omp_alloc.hpp>$$

$head Purpose$$
The C++ $code new$$ and $code delete$$ operators are thread safe,
but this means that a thread may have to wait for a lock on these operations.
Once memory is obtained for a thread, the $code omp_alloc$$ memory
allocator keeps that memory $cref omp_available$$ for the thread so that
it can be re-used without waiting for a lock.
All the CppAD memory allocations use this utility.
The $cref omp_free_available$$ function should be used to return memory
to the system (once it is no longer required by a thread).

$head Include$$
The routines in sections below are defined by $code cppad/omp_alloc.hpp$$.
This file is included by
$code cppad/cppad.hpp$$, but it can also be included separately with out
the rest of the $code CppAD$$.

$head Deprecated 2011-08-23$$
Use $cref thread_alloc$$ instead.

$childtable%
    include/cppad/utility/omp_alloc.hpp
%$$

$end
*/
