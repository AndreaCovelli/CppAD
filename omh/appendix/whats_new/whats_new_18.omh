/* --------------------------------------------------------------------------
CppAD: C++ Algorithmic Differentiation: Copyright (C) 2003-18 Bradley M. Bell

CppAD is distributed under multiple licenses. This distribution is under
the terms of the
                    Eclipse Public License Version 1.0.

A copy of this license is included in the COPYING file of this distribution.
Please visit http://www.coin-or.org/CppAD/ for information on other licenses.
-------------------------------------------------------------------------- */

$begin whats_new_18$$
$spell
	CppAD
	jac
	hes
	Jacobian
	rcv
	subgraph
	op_arg
	enum
$$

$section Changes and Additions to CppAD During 2018$$

$head 05-20$$
The amount of memory used to store each operator was changed from
the size of an enum type to the size of an $code unsigned char$$; i.e.,
one byte.
This changed $code CppAD::local::OpCode$$ to
$code CPPAD_OP_CODE_TYPE$$ in the expression used to compute
$cref/size_op_arg/seq_property/size_op_seq/$$.

$head 05-17$$
The memory report for the CppAD matrix multiply speed test was changed
to report the memory before clearing the atomic functions; see the end of
$cref cppad_mat_mul.cpp$$.

$head 05-04$$
The comparison operations were changed on
$cref/2015-01-20/whats_new_15/01-20/$$ when the
$cref/abort_op_index/Independent/abort_op_index/$$ option was added.
This change caused a slow down CppAD
because the $cref compare$$ operators used to not be recorded when
$code NDEBUG$$ was defined.
The $cref/record_compare/Independent/record_compare/$$ option has been
added so that one can obtain this better performance
(when one does not need  the $cref compare_change$$ function
or the $cref/abort_op_index/Independent/abort_op_index/$$ feature).

$head 05-03$$
The following was merged in from the $code reduce_tape$$ branch:
A change was made in the way CppAD iterated over the operation sequence
when subgraph operations were first added; see the heading
$cref/11-20/whats_new_17/11-20/$$ in whats new for 2017.
This caused CppAD to always use more memory for storing tapes.
This has been fixed so this extra memory is only allocated when it is needed.
In addition it can be freed; see
$cref/size_random/seq_property/size_random/$$ and
$cref/clear_subgraph/subgraph_reverse/clear_subgraph/$$.
In addition, this changed the amount of memory returned by
$cref/size_op_seq/seq_property/size_op_seq/$$ so that it
no longer includes the part returned by $code size_random$$.

$head 04-29$$
Change the $cref cppad_sparse_hessian.cpp$$ speed test to support the
$cref/symmetric/speed_main/Sparsity Options/symmetric/$$ option
for sparsity calculations.
This was added because, even though the symmetric sparsity patterns
are more efficient, they seem to take longer to calculation
and hence general sparsity patterns may be faster; see the sparse hessian
$cref/color_method/sparse_hessian/work/color_method/$$.

$head 04-13$$
The $cref speed_cppad$$ tests were modified to report the
amount of memory allocated at the end of each tests.
This will aid in the reduction of CppAD memory usage.

$head 03-20$$
Fix bug in $cref optimize$$ and $cref subgraph_sparsity$$
when using C++11 $cref erf$$ function.

$head 03-19$$
Add more detail to the
$cref/dynamic parameters/wish_list/Dynamic Parameters/$$
whish list item.

$head 03-04$$
The $code example/abs_normal$$ directory was missing from the
$cref/example/directory/Example Directory/$$ sub-directory list.
This has been fixed.

$head 03-02$$
Add the $cref/pat/sparse_rcv/pat/$$ member function to
the $code sparse_rcv$$ template class.

$head 02-27$$
Documentation was added to state that the $icode work$$ structure for
$cref/sparse_jac/sparse_jac/work/$$ ( $cref/sparse_hes/sparse_hes/work/$$ )
can be used a different $icode f$$ and a different $icode subset$$
provided that Jacobian (Hessian) sparsity pattern for $icode f$$
and the sparsity pattern in $icode subset$$ are the same.

$head 02-26$$
The routine $cref sparse2eigen$$, added on 02-20, only worked
when the values in the matrix were integers.
This bug has been fixed.

$head 02-23$$
The syntax for some of the $cref utility$$ files were missing the
$code # include$$ command (or just the $code #$$ in the include command);
e.g., see the
$cref/syntax/set_union/Syntax/$$ for the $code set_union$$ utility.

$head 02-20$$
Add the utility function $cref sparse2eigen$$.

$end
