/* --------------------------------------------------------------------------
CppAD: C++ Algorithmic Differentiation: Copyright (C) 2003-19 Bradley M. Bell

  CppAD is distributed under the terms of the
               Eclipse Public License Version 2.0.

  This Source Code may also be made available under the following
  Secondary License when the conditions for such availability set forth
  in the Eclipse Public License, Version 2.0 are satisfied:
        GNU General Public License, Version 2.0 or later.
-------------------------------------------------------------------------- */
$begin json_op_define$$
$spell
    Json
    arg
    op
    mul
$$

$section Json Operator Definitions$$
Each operator definition has a $icode op_code$$ value that
is used to identify it for a particular $icode json_ad_graph$$.
Unless otherwise specified,
node indices below must not correspond to
$cref/strings/json_ad_graph/string_vec/$$.

$head add$$
This operator has the following Json definition:
$codei%
{
    "op_code":      %op_code%,
    "name":         "add",
    "n_arg":        2
}
%$$
A corresponding $icode op_usage$$ has the form
$codei%
    [ %op_code%, %first_arg%, %second_arg% ]
%$$
This operation creates one node with result equal to
the sum of results corresponding to the first and second argument nodes.

$head mul$$
This operator has the following Json definition:
$codei%
{
    "op_code":      %op_code%,
    "name":         "mul",
    "n_arg":        2
}
%$$
A corresponding $icode op_usage$$ has the form
$codei%
    [ %op_code%, %first_arg%, %second_arg%  ]
%$$
This operation creates one node with result equal to
the product of results corresponding to the first and second argument nodes.

$head sum$$
This operator has the following Json definition:
$codei%
{
    "op_code":      %op_code%,
    "name":         "sum"
}
%$$
A corresponding $icode op_usage$$ has the form
$codei%
    [ %op_code%, %n_result%, %n_arg%, [ %first_arg%, %...%, %last_arg% ] ]
%$$
where $icode n_result$$ is always $code 1$$.
This operation creates one node with result equal to
the sum of results corresponding to all of its argument nodes.

$subhead Example$$
The file $cref json_sum_op.cpp$$ is an example / test of this operation.

$childtable%
    example/json/sum_op.cpp
%$$

$end
