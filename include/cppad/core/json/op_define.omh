/* --------------------------------------------------------------------------
CppAD: C++ Algorithmic Differentiation: Copyright (C) 2003-19 Bradley M. Bell

  CppAD is distributed under the terms of the
               Eclipse Public License Version 2.0.

  This Source Code may also be made available under the following
  Secondary License when the conditions for such availability set forth
  in the Eclipse Public License, Version 2.0 are satisfied:
        GNU General Public License, Version 2.0 or later.
-------------------------------------------------------------------------- */
$begin json_op_define$$
$spell
    Json
    arg
    op
    mul
    dyn
    var
    ind
$$

$section Json Operator Definitions$$
Each operator definition has a $icode op_code$$ value that
is used to identify it for a particular $icode json_ad_graph$$.
Unless otherwise specified,
node indices below must not correspond to
$cref/strings/json_ad_graph/string_vec/$$.

$head add$$
This operator has the following Json definition:
$codei%
{
    "op_code":      %op_code%,
    "name":         "add",
    "n_arg":        2
}
%$$
A corresponding $icode op_usage$$ has the form
$codei%
    [ %op_code%, %first_arg%, %second_arg% ]
%$$
This operation creates one node with result equal to
the first argument result plus the second argument result.

$head call$$
This operator has the following Json definition:
$codei%
{
    "op_code":      %op_code%,
    "name":         "call"
}
%$$
A corresponding $icode op_usage$$ has the form
$codei%
    [ %op_code%, %call_name%, %n_result%, %n_dyn%, %n_var%,
        [ %first_dyn%, %...%, %last_dyn%, %first_var%, %...%, %last_var%  ]
    ]
%$$

$subhead call_name$$
This is a $cref/string/json_ad_graph/Token/$$ containing the
$cref/function_name/json_ad_graph/AD Graph/function_name/$$
for the function being called.

$subhead n_result$$
The must be equal to
$cref/n_dependent/json_ad_graph/dependent_vec/n_dependent/$$
for the function specified by $icode call_name$$.

$subhead n_dyn$$
The must be equal to
$cref/n_dynamic_ind/json_ad_graph/dynamic_ind_vec/n_dynamic_ind/$$
for the function specified by $icode call_name$$.

$subhead n_var$$
The must be equal to
$cref/n_independent/json_ad_graph/independent_vec/n_independent/$$
for the function specified by $icode call_name$$.

$subhead first_dyn, ..., last_dyn$$
These are the node indices that specify the value of the
independent dynamic parameter vector in the call to $icode call_name$$.

$subhead first_var, ..., last_var$$
These are the node indices that specify the value of the
independent variable vector in the call to $icode call_name$$.


$head mul$$
This operator has the following Json definition:
$codei%
{
    "op_code":      %op_code%,
    "name":         "mul",
    "n_arg":        2
}
%$$
A corresponding $icode op_usage$$ has the form
$codei%
    [ %op_code%, %first_arg%, %second_arg%  ]
%$$
This operation creates one node with result equal to
the first argument result times the second argument result.

$subhead Example$$
The file $cref json_mul_op.cpp$$ is an example and test of this operation.

$head sub$$
This operator has the following Json definition:
$codei%
{
    "op_code":      %op_code%,
    "name":         "sub",
    "n_arg":        2
}
%$$
A corresponding $icode op_usage$$ has the form
$codei%
    [ %op_code%, %first_arg%, %second_arg% ]
%$$
This operation creates one node with result equal to
the first argument result minus the second argument result.

$subhead Example$$
The file $cref json_sub_op.cpp$$ is an example and test of this operation.

$head sum$$
This operator has the following Json definition:
$codei%
{
    "op_code":      %op_code%,
    "name":         "sum"
}
%$$
A corresponding $icode op_usage$$ has the form
$codei%
    [ %op_code%, %n_result%, %n_arg%, [ %first_arg%, %...%, %last_arg% ] ]
%$$
where $icode n_result$$ is always $code 1$$.
This operation creates one node with result equal to
the sum of results corresponding to all of its argument nodes.

$subhead Example$$
The file $cref json_sum_op.cpp$$ is an example and test of this operation.

$childtable%
    example/json/mul_op.cpp%
    example/json/sub_op.cpp%
    example/json/sum_op.cpp
%$$

$end
