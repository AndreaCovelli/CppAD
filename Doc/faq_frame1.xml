<?xml version='1.0'?>
<?xml-stylesheet type='text/xsl' href='pmathml.xsl'?>
<html xmlns='http://www.w3.org/1999/xhtml'>
<head>
<title>Frequently Asked Questions and Answers</title>
<meta name="description" content="Frequently Asked Questions and Answers"/>
<meta name="keywords" content=" frequently asked questions answers assignment and independent bugs comparechange exceptions variables intrinsic functions special matrix inverse mode namespace cppadvector using standard math function speed tape storage: disk memory "/><style type='text/css'>
BODY { color : black }
BODY { background-color : white }
</style>
</head>
<body>
<div align='right'><a href="license.xml" target="_top">previous</a>
&#xA0;&#xA0;<a href="install.xml" target="_top">next</a>
&#xA0;&#xA0;<a href="_contents.xml" target="_top">contents</a>
&#xA0;&#xA0;<a href="_reference.xml" target="_top">reference</a>
&#xA0;&#xA0;<a href="_index.xml" target="_top">index</a>
&#xA0;&#xA0;<a href="_search.xml" target="_top">search</a>
&#xA0;&#xA0;<a href="_external.xml" target="_top">external</a>
&#xA0;&#xA0;This:&#xA0;&#xA0;<a href="faq.xml" target="_top">section</a>, <a href="faq_frame1.xml" target="_top">frame</a></div>
<hr/><center><b><big><big>Frequently Asked Questions and Answers</big></big></b></center>
<br/>
<b><big><a name="Assignment and Independent">Assignment and Independent</a></big></b>
<br/>
Why does the code sequence
<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;Independent(</span></font></code><i><span style='white-space: nowrap'>u</span></i><code><font color="blue"><span style='white-space: nowrap'>);<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span></font></code><i><span style='white-space: nowrap'>v</span></i><code><font color="blue"><span style='white-space: nowrap'>&#xA0;=&#xA0;</span></font></code><i><span style='white-space: nowrap'>u</span></i><code><font color="blue"><span style='white-space: nowrap'>;<br/>
</span></font></code>behave differently from the code sequence
<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span></font></code><i><span style='white-space: nowrap'>v</span></i><code><font color="blue"><span style='white-space: nowrap'>&#xA0;=&#xA0;</span></font></code><i><span style='white-space: nowrap'>u</span></i><code><font color="blue"><span style='white-space: nowrap'>;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;Independent(</span></font></code><i><span style='white-space: nowrap'>u</span></i><code><font color="blue"><span style='white-space: nowrap'>);<br/>
</span></font></code>While the tape state is 
<a href="glossary_frame1.xml#Tape State.Empty" target="frame1"><i><span style='white-space: nowrap'>empty</span></i></a>
,
the assignment operator just assigns values and does not
track the dependency of one variable upon another.
Thus in the first case, <i>y</i> is a vector of 
<a href="glossary_frame1.xml#Variable" target="frame1"><i><span style='white-space: nowrap'>variables</span></i></a>

and in the second case it is a vector of
<a href="glossary_frame1.xml#Parameter" target="frame1"><i><span style='white-space: nowrap'>parameters</span></i></a>
.

<br/>
<br/>
<b><big><a name="Bugs">Bugs</a></big></b>
<br/>
What should I do if I suspect that there is a bug in CppAD ?
<code><span style='white-space: nowrap'><br/>
<br/>
</span></code><ol type="1"><li>The first step is to search this page for mention of
some feature that perhaps you interpreting as a bug
(and is not).
If this does not solve your problem, continue
to the next step.
</li><li>

The second step is to check the 
<a href="whatsnew04.xml" target="_top"><span style='white-space: nowrap'>whatsnew</span></a>
 messages from the date 
of the release that you are using to the current date.
If the bug has been mentioned and fixed,
then <a href="install.xml" target="_top"><span style='white-space: nowrap'>install</span></a>
 the current version of CppAD.
If this does not solve your problem, continue
to the next step.
</li><li>

Send <code><font color="blue">bradbell</font></code> at <code><font color="blue">seanet.com</font></code> e-mail with 
a description of the bug.
Attaching the source code for small sample program that 
demonstrates the bug is always helpful.
A smaller program
that executes fewer statements 
makes a better bug report.
</li></ol>


<br/>
<br/>
<b><big><a name="CompareChange">CompareChange</a></big></b>
<br/>
If you attempt to use the 
<a href="adfun_frame2.xml#CompareChange" target="frame1"><i><span style='white-space: nowrap'>CompareChange</span></i></a>

function when <code><font color="blue">NDEBUG</font></code> is true,
you will get an error message stating that
<code><font color="blue">CompareChange</font></code> is not a member of the
<a href="adfun.xml" target="_top"><span style='white-space: nowrap'>ADFun</span></a>
 template class.


<br/>
<br/>
<b><big><a name="Exceptions">Exceptions</a></big></b>
<br/>
Why, in all the examples, do you pass back a boolean variable instead
of throwing an exception ?
<code><span style='white-space: nowrap'><br/>
<br/>
</span></code>The examples are also used to test the correctness of CppAD
and to check your installation.
For these two uses, it is helpful to run all the tests
and to know which ones failed.
The actual code in CppAD uses the <a href="cppaderror.xml" target="_top"><span style='white-space: nowrap'>CppADError</span></a>
 utility
to signal an exception.
Specifications are given redefining this action.

<br/>
<br/>
<b><big><a name="Independent Variables">Independent Variables</a></big></b>
<br/>
Is it possible to evaluate the same tape recording with different values 
for the independent variables ?
<code><span style='white-space: nowrap'><br/>
<br/>
</span></code>Yes (see <a href="adfun.xml" target="_top"><span style='white-space: nowrap'>ADFun</span></a>
 and 
<a href="forward_frame2.xml#yp.Zero Order" target="frame1"><i><span style='white-space: nowrap'>zero&#xA0;order</span></i></a>
 in forward mode.)

<br/>
<br/>
<b><big><a name="Intrinsic Functions">Intrinsic Functions</a></big></b>

<br/>
Are there plans to add more intrinsic functions to CppAD ?
<code><span style='white-space: nowrap'><br/>
<br/>
</span></code>Yes. The <a href="stdmathlib.xml" target="_top"><span style='white-space: nowrap'>StdMathLib</span></a>
 section contains
a list of the intrinsic functions included so far.
Contact 
<a href="mailto:bradbell@seanet.com" target="_top"><span style='white-space: nowrap'>bradbell@seanet.com</span></a>

if you need a standard math function that is has not yet been included.



<br/>
<br/>
<b><big><a name="Matrix Inverse">Matrix Inverse</a></big></b>
<br/>
Is it possible to differentiate (with respect to the matrix elements)
the computation of the inverse of a matrix 
where the computation of the inverse uses pivoting ? 
<code><span style='white-space: nowrap'><br/>
<br/>
</span></code>The example routine <a href="lusolve.xml" target="_top"><span style='white-space: nowrap'>LuSolve</span></a>
 can be used to do this
because the inverse is a special case of the solution of linear equations.
The examples 
<a href="jacludet.cpp.xml" target="_top"><span style='white-space: nowrap'>JacLuDet.cpp</span></a>
 and <a href="hesludet.cpp.xml" target="_top"><span style='white-space: nowrap'>HesLuDet.cpp</span></a>

use LuSolve to compute derivatives of the 
determinant with respect to the components of the matrix.

<br/>
<br/>
<b><big><a name="Mode">Mode</a></big></b>
<br/>
When evaluating derivatives, 
one always has a choice between 
forward and reverse mode.
How does one decide which mode to use ?
<code><span style='white-space: nowrap'><br/>
<br/>
</span></code>In general, the best mode depends on the number of domain and range
components in the function that your are differentiating.
Each call to <a href="forward.xml" target="_top"><span style='white-space: nowrap'>Forward</span></a>
 computes the derivative of all 
the range directions with respect to one domain direction.
Each call to <a href="reverse.xml" target="_top"><span style='white-space: nowrap'>Reverse</span></a>
 computes the derivative of one 
range direction with respect to all the domain directions.
The times required for (speed of) 
calls <code><font color="blue">Forward</font></code> and <code><font color="blue">Reverse</font></code> are about equal.  
The <a href="adfun_frame2.xml#Parameter" target="frame1"><i><span style='white-space: nowrap'>Parameter</span></i></a>
 
function can be used to quickly determine that 
some range directions have derivative zero.



<br/>
<br/>
<b><big><a name="Namespace">Namespace</a></big></b>



<br/>
<br/>
<b><a name="Namespace.CppADvector">CppADvector</a></b>
<br/>
Why do you use <code><font color="blue">CppADvector</font></code> instead of a namespace for
the CppAD vector class ?
<code><span style='white-space: nowrap'><br/>
<br/>
</span></code>Actually, the default definition for <code><font color="blue">CppADvector</font></code> is the
<a href="cppad_vector.xml" target="_top"><span style='white-space: nowrap'>CppAD::vector</span></a>
 template class; 
i.e., it is in the <code><font color="blue">CppAD</font></code> namespace.
The preprocessor symbol 
<a href="cppadvector.xml" target="_top"><span style='white-space: nowrap'>CppADvector</span></a>
 can be used
to make CppAD use a different 
<a href="simplevector.xml" target="_top"><span style='white-space: nowrap'>SimpleVector</span></a>
 template class of your choosing.
All preprocessor symbols that are defined or used
by CppAD begin with <code><font color="blue">CppAD</font></code>.

<br/>
<br/>
<b><a name="Namespace.Using">Using</a></b>


<br/>
Why do I have trouble when the following command
<code><font color="blue">
<span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;using&#xA0;namespace&#xA0;CppAD<br/>
</span>
</font></code>
is at the global level 
(not within a function or some other limited scope).
<code><span style='white-space: nowrap'><br/>
<br/>
</span></code>Some versions of <code><font color="blue"># include &lt;cmath&gt;</font></code> for
gcc and Visual C++ define the standard math functions,
(for example <code><font color="blue"><span style='white-space: nowrap'>double&#xA0;sqrt(double&#xA0;</span></font></code><i><span style='white-space: nowrap'>x</span></i><code><font color="blue"><span style='white-space: nowrap'>)</span></font></code>)
at the global level.
It is necessary to put your <code><font color="blue">using</font></code> commands within the scope
of a function,
or some other limited scope,
in order to shadow these improper global definitions.

<br/>
<br/>
<b><big><a name="Speed">Speed</a></big></b>
<br/>
How do I get the best speed performance out of CppAD ?
<code><span style='white-space: nowrap'><br/>
<br/>
</span></code>You should compile your code with optimization, without debugging,
and with the preprocessor symbol <code><font color="blue">NDEBUG</font></code> defined.
(The <a href="speed.xml" target="_top"><span style='white-space: nowrap'>Speed</span></a>
 tests do this.)
Note that defining <code><font color="blue">NDEBUG</font></code>
will turn off all of the error checking and reporting that
is done using the default definitions in <a href="cppaderror.xml" target="_top"><span style='white-space: nowrap'>CppADError</span></a>
. 

<br/>
<br/>
<b><big><a name="Tape Storage: Disk or Memory">Tape Storage: Disk or Memory</a></big></b>
<br/>
Does CppAD store the tape on disk or in memory ?
<code><span style='white-space: nowrap'><br/>
<br/>
</span></code>CppAD uses memory to store a different tape for recording operations
for each <code><font color="blue"><span style='white-space: nowrap'>AD&lt;</span></font></code><i><span style='white-space: nowrap'>Base</span></i><code><font color="blue"><span style='white-space: nowrap'>&gt;</span></font></code> type that is used.
If you have a very large number calculations that are recorded
on a tape, the tape will keep growing to hold the necessary information.
Eventually, virtual memory may be used to store the tape 
and the calculations may slow down because of necessary disk access.



<hr/>Input File: omh\Faq.omh

</body>
</html>
