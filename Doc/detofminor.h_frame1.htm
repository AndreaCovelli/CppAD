<html><head>
<title>Compute the Determinant of a Minor: Source Code</title>
<meta name="description" content="Compute the Determinant of a Minor: Source Code">
<meta name="keywords" content=" Detofminor determinant minor matrix "><style type='text/css'>
BODY { color : black }
BODY { background-color : white }
</style>
</head>
<body>
<div align='right'><a href="detofminor.cpp.htm" target="_top">previous</a>
&nbsp;&nbsp;<a href="detbyminor.htm" target="_top">next</a>
&nbsp;&nbsp;<a href="_contents.htm" target="_top">contents</a>
&nbsp;&nbsp;<a href="_reference.htm" target="_top">reference</a>
&nbsp;&nbsp;<a href="_index.htm" target="_top">index</a>
&nbsp;&nbsp;<a href="_search.htm" target="_top">search</a>
&nbsp;&nbsp;<a href="_external.htm" target="_top">external</a>
&nbsp;&nbsp;This:&nbsp;&nbsp;<a href="detofminor.h.htm" target="_top">section</a>, <a href="detofminor.h_frame1.htm" target="_top">frame</a></div>
<hr>




<center><b><big><big>Compute the Determinant of a Minor: Source Code</big></big></b></center>
<code><font color="blue"># ifndef CppADDetOfMinorIncluded
<code><span style='white-space: nowrap'><br>
</span></code># define CppADDetOfMinorIncluded

<span style='white-space: nowrap'><br>
<br>
#&nbsp;include&nbsp;&lt;CppAD/CppAD.h&gt;<br>
<br>
<br>
//&nbsp;BEGIN&nbsp;CppAD&nbsp;namespace<br>
namespace&nbsp;CppAD&nbsp;{<br>
<br>
template&nbsp;&lt;class&nbsp;Type&gt;<br>
Type&nbsp;DetOfMinor(<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;CppADvector&lt;Type&gt;&nbsp;&amp;A,&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size_t&nbsp;m,&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size_t&nbsp;n,&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CppADvector&lt;size_t&gt;&nbsp;&amp;r,&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CppADvector&lt;size_t&gt;&nbsp;&amp;c)<br>
{&nbsp;&nbsp;&nbsp;&nbsp;size_t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;R0;&nbsp;&nbsp;//&nbsp;R(0)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size_t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Cj;&nbsp;&nbsp;//&nbsp;C(j)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size_t&nbsp;&nbsp;&nbsp;previous;&nbsp;&nbsp;//&nbsp;C(j)&nbsp;=&nbsp;c[previous]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size_t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j;&nbsp;&nbsp;//&nbsp;column&nbsp;index&nbsp;in&nbsp;M<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Type&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;detM;&nbsp;&nbsp;//&nbsp;determinant&nbsp;of&nbsp;M<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Type&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;detS;&nbsp;&nbsp;//&nbsp;determinant&nbsp;of&nbsp;sub-minor&nbsp;of&nbsp;M<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Type&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m0j;&nbsp;&nbsp;//&nbsp;an&nbsp;element&nbsp;of&nbsp;the&nbsp;first&nbsp;row&nbsp;of&nbsp;M<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s;&nbsp;&nbsp;&nbsp;//&nbsp;sign&nbsp;of&nbsp;the&nbsp;current&nbsp;sub-minor&nbsp;in&nbsp;summation<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;indices&nbsp;in&nbsp;A&nbsp;of&nbsp;M(0,&nbsp;0)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;R0&nbsp;=&nbsp;r[m];<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Cj&nbsp;=&nbsp;c[m];<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;check&nbsp;for&nbsp;1&nbsp;by&nbsp;1&nbsp;case<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(&nbsp;n&nbsp;==&nbsp;1&nbsp;)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;A[&nbsp;R0&nbsp;*&nbsp;m&nbsp;+&nbsp;Cj&nbsp;];<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;compute&nbsp;determinant&nbsp;of&nbsp;M&nbsp;by&nbsp;expanding&nbsp;minors&nbsp;along&nbsp;its&nbsp;first&nbsp;row<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;initialize&nbsp;summation<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;detM&nbsp;=&nbsp;0;<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;initialize&nbsp;sign&nbsp;of&nbsp;permutation<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s&nbsp;=&nbsp;1;<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;remove&nbsp;first&nbsp;row&nbsp;from&nbsp;sub-minors&nbsp;of&nbsp;M<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;r[m]&nbsp;=&nbsp;r[R0];<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;initialize&nbsp;previous&nbsp;column&nbsp;index<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;previous&nbsp;=&nbsp;m;<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;for&nbsp;each&nbsp;column&nbsp;of&nbsp;M<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(j&nbsp;=&nbsp;0;&nbsp;j&nbsp;&lt;&nbsp;n;&nbsp;j++)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;M(0,&nbsp;j)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m0j&nbsp;=&nbsp;A[&nbsp;R0&nbsp;*&nbsp;m&nbsp;+&nbsp;Cj&nbsp;];<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;remove&nbsp;column&nbsp;index&nbsp;j&nbsp;from&nbsp;sub-minor&nbsp;of&nbsp;M<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c[previous]&nbsp;=&nbsp;c[Cj];<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;determinant&nbsp;of&nbsp;subminor<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;detS&nbsp;=&nbsp;DetOfMinor(A,&nbsp;m,&nbsp;n&nbsp;-&nbsp;1,&nbsp;r,&nbsp;c);<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;restore&nbsp;column&nbsp;index&nbsp;j&nbsp;to&nbsp;sub-minor&nbsp;of&nbsp;M<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c[previous]&nbsp;=&nbsp;Cj;<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;include&nbsp;in&nbsp;summation<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(&nbsp;s&nbsp;&gt;&nbsp;0&nbsp;)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;detM&nbsp;=&nbsp;detM&nbsp;+&nbsp;m0j&nbsp;*&nbsp;detS;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;detM&nbsp;=&nbsp;detM&nbsp;-&nbsp;m0j&nbsp;*&nbsp;detS;<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;advance&nbsp;to&nbsp;next&nbsp;column&nbsp;of&nbsp;M<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;previous&nbsp;=&nbsp;Cj;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Cj&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;c[Cj];<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;-s;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;restore&nbsp;column&nbsp;index&nbsp;zero&nbsp;to&nbsp;M<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;r[m]&nbsp;=&nbsp;R0;<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;detM;<br>
}<br>
<br>
}&nbsp;//&nbsp;END&nbsp;CppAD&nbsp;namespace<br>
<br>
</span># endif
</font></code>


<hr>Input File: Example\DetOfMinor.h

</body>
</html>
