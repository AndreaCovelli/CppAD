<?xml version='1.0'?>
<?xml-stylesheet type='text/xsl' href='pmathml.xsl'?>
<html xmlns='http://www.w3.org/1999/xhtml'>
<head>
<title>Using Multiple Tapes</title>
<meta name="description" content="Using Multiple Tapes"/>
<meta name="keywords" content=" multiple tape derivative calculation "/><style type='text/css'>
BODY { color : black }
BODY { background-color : white }
</style>
</head>
<body>
<div align='right'><a href="comparechange.cpp.xml" target="_top">previous</a>
&#xA0;&#xA0;<a href="multape.cpp.xml" target="_top">next</a>
&#xA0;&#xA0;<a href="_contents.xml" target="_top">contents</a>
&#xA0;&#xA0;<a href="_reference.xml" target="_top">reference</a>
&#xA0;&#xA0;<a href="_index.xml" target="_top">index</a>
&#xA0;&#xA0;<a href="_search.xml" target="_top">search</a>
&#xA0;&#xA0;<a href="_external.xml" target="_top">external</a>
&#xA0;&#xA0;This:&#xA0;&#xA0;<a href="multape.xml" target="_top">section</a>, <a href="multape_frame1.xml" target="_top">frame</a></div>
<hr/><center><b><big><big>Using Multiple Tapes</big></big></b></center>
<br/>
<b><big><a name="Background">Background</a></big></b>
<br/>
If <i>f</i> is an <code><font color="blue"><span style='white-space: nowrap'>ADFun&lt;</span></font></code><i><span style='white-space: nowrap'>Base</span></i><code><font color="blue"><span style='white-space: nowrap'>&gt;</span></font></code> object,
the vectors returned by 
<a href="forward.xml" target="_top"><span style='white-space: nowrap'>f.Forward</span></a>
,
and
<a href="reverse.xml" target="_top"><span style='white-space: nowrap'>f.Reverse</span></a>
,
have values in the base type (<i>Base</i>) and not
<code><font color="blue"><span style='white-space: nowrap'>AD&lt;</span></font></code><i><span style='white-space: nowrap'>Base</span></i><code><font color="blue"><span style='white-space: nowrap'>&gt;</span></font></code>.
This reflects the fact that operations used to calculate
these function values are not recorded by the tape corresponding to
<code><font color="blue"><span style='white-space: nowrap'>AD&lt;</span></font></code><i><span style='white-space: nowrap'>Base</span></i><code><font color="blue"><span style='white-space: nowrap'>&gt;</span></font></code> operations. 

<br/>
<br/>
<b><big><a name="Motivation">Motivation</a></big></b>
<br/>
Suppose that you uses derivatives of one or more inner functions
as part of the operations 
needed to compute an outer function.
For example,
the derivatives returned by <code><font color="blue"></font></code><i><span style='white-space: nowrap'>f</span></i><code><font color="blue"><span style='white-space: nowrap'>.Forward</span></font></code>
might be used as part of 
Taylor's method for solving ordinary
differential equations. 
In addition, we might want to differentiate the
solution of a differential equation with respect to parameters
in the equation.
This can be accomplished in the following way:

<ol type="1"><li>
The operations during the calculations of the function defining the
differential equation could be preformed using the a class of the form
<code><font color="blue"><span style='white-space: nowrap'>&#xA0;AD&lt;&#xA0;AD&lt;double&gt;&#xA0;&gt;</span></font></code>. 

</li><li>

The operations during the calculation of Taylor's method
could be preformed using the <code><font color="blue"><span style='white-space: nowrap'>&#xA0;AD&lt;double&gt;</span></font></code> class.

</li><li>

The results of the solution of the differential equation
could then be preformed using the <code><font color="blue">double</font></code> class.

</li></ol>


<br/>
<br/>
<b><big><a name="General Solution">General Solution</a></big></b>
<br/>
Provided that we are currently recording
<code><font color="blue"><span style='white-space: nowrap'>&#xA0;AD&lt;double&gt;</span></font></code> operations,
and <i>fin</i> is an <code><font color="blue"><span style='white-space: nowrap'>ADFun&lt;&#xA0;AD&lt;double&gt;&#xA0;&gt;</span></font></code> object,
the operations used to compute the vectors
returned by 
<code><font color="blue"></font></code><i><span style='white-space: nowrap'>fin</span></i><code><font color="blue"><span style='white-space: nowrap'>.Forward</span></font></code>,
<code><font color="blue"></font></code><i><span style='white-space: nowrap'>fin</span></i><code><font color="blue"><span style='white-space: nowrap'>.Rev</span></font></code>,
and
<code><font color="blue"></font></code><i><span style='white-space: nowrap'>fin</span></i><code><font color="blue"><span style='white-space: nowrap'>.RevTwo</span></font></code>,
will be recorded on the tape corresponding to
<code><font color="blue"><span style='white-space: nowrap'>AD&lt;double&gt;</span></font></code> operations. 


<br/>
<br/>
<b><big><a name="General Procedure">General Procedure</a></big></b>


<br/>
<br/>
<b><a name="General Procedure.Start ADBaseTape">Start ADBaseTape</a></b>
<br/>
The first step is to declare the independent variables using a
<code><font color="blue"><span style='white-space: nowrap'>CppADvector&lt;double&gt;</span></font></code> argument to the
<a href="independent.xml" target="_top"><span style='white-space: nowrap'>Independent</span></a>
 function.
This will start recording all
operations performed using <code><font color="blue"><span style='white-space: nowrap'>AD&lt;double&gt;</span></font></code> class objects.

<br/>
<br/>
<b><a name="General Procedure.Start ADDBaseTape">Start ADDBaseTape</a></b>
<br/>
The next step is to declare the independent variables using a
<code><font color="blue"><span style='white-space: nowrap'>CppADvector&lt;&#xA0;AD&lt;&#xA0;AD&lt;double&gt;&#xA0;&gt;&#xA0;&gt;</span></font></code> argument to the
<code><font color="blue">Independent</font></code> function.
This will start recording all
operations performed using <code><font color="blue"><span style='white-space: nowrap'>AD&lt;&#xA0;AD&lt;double&gt;&#xA0;&gt;</span></font></code> class objects.

<br/>
<br/>
<b><a name="General Procedure.Inner Function Calculations">Inner Function Calculations</a></b>
<br/>
The next step is to calculation
the inner functions 
using <code><font color="blue"><span style='white-space: nowrap'>AD&lt;&#xA0;AD&lt;double&gt;&#xA0;&gt;</span></font></code> class objects.

<br/>
<br/>
<b><a name="General Procedure.Derivative of Inner Function">Derivative of Inner Function</a></b>
<br/>
The next step is to create the 
<code><font color="blue"><span style='white-space: nowrap'>ADFun&lt;&#xA0;AD&lt;double&gt;&#xA0;&gt;</span></font></code> function object <i>fin</i>.
This will also stop the recording of
operations performed using <code><font color="blue"><span style='white-space: nowrap'>AD&lt;&#xA0;AD&lt;double&gt;&#xA0;&gt;</span></font></code> class objects.
The <i>fin</i> object can then be used to calculate
the derivatives needed to compute the outer function.

<br/>
<br/>
<b><a name="General Procedure.Outer Function">Outer Function</a></b>
<br/>
The next step is to compute the 
outer function
using <code><font color="blue"><span style='white-space: nowrap'>AD&lt;double&gt;</span></font></code> class objects.

<br/>
<br/>
<b><a name="General Procedure.Derivative of Outer Function">Derivative of Outer Function</a></b>
<br/>
The next step is to create the 
<code><font color="blue"><span style='white-space: nowrap'>ADFun&lt;double&gt;</span></font></code> function object <i>fout</i>.
This will also stop the recording of
operations performed using <code><font color="blue"><span style='white-space: nowrap'>AD&lt;double&gt;</span></font></code> class objects.
The <i>fout</i> object can then be used to calculate
the derivatives of the outer function.




<br/>
<br/>
<b><big><a name="Example">Example</a></big></b>
<br/>
The file
<a href="multape.cpp.xml" target="_top"><span style='white-space: nowrap'>MulTape.cpp</span></a>

contains an example and a test of this procedure.   
It returns true if it succeeds and false otherwise.
The file <a href="odetaylor.cpp.xml" target="_top"><span style='white-space: nowrap'>OdeTaylor.cpp</span></a>
 is a more complex example
use of multiple tapes.


<hr/>Input File: omh\MulTape.omh

</body>
</html>
