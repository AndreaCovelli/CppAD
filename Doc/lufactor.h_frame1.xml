<?xml version='1.0'?>
<?xml-stylesheet type='text/xsl' href='pmathml.xsl'?>
<html xmlns='http://www.w3.org/1999/xhtml'>
<head>
<title>LuFactor Source Code</title>
<meta name="description" content="LuFactor Source Code"/>
<meta name="keywords" content=" Lufactor source matrix "/><style type='text/css'>
BODY { color : black }
BODY { background-color : white }
</style>
</head>
<body>
<div align='right'><a href="lufactor.cpp.xml" target="_top">previous</a>
&#xA0;&#xA0;<a href="luinvert.xml" target="_top">next</a>
&#xA0;&#xA0;<a href="_contents.xml" target="_top">contents</a>
&#xA0;&#xA0;<a href="_reference.xml" target="_top">reference</a>
&#xA0;&#xA0;<a href="_index.xml" target="_top">index</a>
&#xA0;&#xA0;<a href="_search.xml" target="_top">search</a>
&#xA0;&#xA0;<a href="_external.xml" target="_top">external</a>
&#xA0;&#xA0;This:&#xA0;&#xA0;<a href="lufactor.h.xml" target="_top">section</a>, <a href="lufactor.h_frame1.xml" target="_top">frame</a></div>
<hr/>


<center><b><big><big>LuFactor Source Code</big></big></b></center>
<code><font color="blue">
<span style='white-space: nowrap'><br/>
#&#xA0;include&#xA0;&lt;complex&gt;<br/>
#&#xA0;include&#xA0;&lt;vector&gt;<br/>
<br/>
#&#xA0;ifdef&#xA0;_MSC_VER<br/>
//&#xA0;Fix&#xA0;for&#xA0;problem&#xA0;with&#xA0;MSC&#xA0;standard&#xA0;math&#xA0;functions&#xA0;name&#xA0;space&#xA0;location<br/>
#&#xA0;include&#xA0;&lt;CppAD/CppAD.h&gt;&#xA0;&#xA0;<br/>
#&#xA0;endif<br/>
<br/>
#&#xA0;include&#xA0;&lt;CppAD/CppADError.h&gt;<br/>
#&#xA0;include&#xA0;&lt;CppAD/CheckSimpleVector.h&gt;<br/>
<br/>
namespace&#xA0;CppAD&#xA0;{&#xA0;//&#xA0;BEGIN&#xA0;CppAD&#xA0;namespace<br/>
<br/>
//&#xA0;AbsGeq<br/>
template&#xA0;&lt;typename&#xA0;Float&gt;<br/>
inline&#xA0;bool&#xA0;AbsGeq(const&#xA0;Float&#xA0;&amp;x,&#xA0;const&#xA0;Float&#xA0;&amp;y)<br/>
{&#xA0;&#xA0;&#xA0;&#xA0;Float&#xA0;xabs&#xA0;=&#xA0;x;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;if(&#xA0;xabs&#xA0;&lt;=&#xA0;Float(0)&#xA0;)<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;xabs&#xA0;=&#xA0;-&#xA0;xabs;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;Float&#xA0;yabs&#xA0;=&#xA0;y;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;if(&#xA0;yabs&#xA0;&lt;=&#xA0;Float(0)&#xA0;)<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;yabs&#xA0;=&#xA0;-&#xA0;yabs;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;return&#xA0;xabs&#xA0;&gt;=&#xA0;yabs;<br/>
}<br/>
inline&#xA0;bool&#xA0;AbsGeq(<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;const&#xA0;std::complex&lt;double&gt;&#xA0;&amp;x,&#xA0;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;const&#xA0;std::complex&lt;double&gt;&#xA0;&amp;y)<br/>
{&#xA0;&#xA0;&#xA0;&#xA0;double&#xA0;xsq&#xA0;=&#xA0;x.real()&#xA0;*&#xA0;x.real()&#xA0;+&#xA0;x.imag()&#xA0;*&#xA0;x.imag();<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;double&#xA0;ysq&#xA0;=&#xA0;y.real()&#xA0;*&#xA0;y.real()&#xA0;+&#xA0;y.imag()&#xA0;*&#xA0;y.imag();<br/>
<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;return&#xA0;xsq&#xA0;&gt;=&#xA0;ysq;<br/>
}<br/>
inline&#xA0;bool&#xA0;AbsGeq(<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;const&#xA0;std::complex&lt;float&gt;&#xA0;&amp;x,&#xA0;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;const&#xA0;std::complex&lt;float&gt;&#xA0;&amp;y)<br/>
{&#xA0;&#xA0;&#xA0;&#xA0;float&#xA0;xsq&#xA0;=&#xA0;x.real()&#xA0;*&#xA0;x.real()&#xA0;+&#xA0;x.imag()&#xA0;*&#xA0;x.imag();<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;float&#xA0;ysq&#xA0;=&#xA0;y.real()&#xA0;*&#xA0;y.real()&#xA0;+&#xA0;y.imag()&#xA0;*&#xA0;y.imag();<br/>
<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;return&#xA0;xsq&#xA0;&gt;=&#xA0;ysq;<br/>
}<br/>
<br/>
//&#xA0;LuFactor<br/>
template&#xA0;&lt;typename&#xA0;SizeVector,&#xA0;typename&#xA0;FloatVector&gt;<br/>
int&#xA0;LuFactor(SizeVector&#xA0;&amp;ip,&#xA0;SizeVector&#xA0;&amp;jp,&#xA0;FloatVector&#xA0;&amp;LU)<br/>
{&#xA0;&#xA0;&#xA0;&#xA0;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;type&#xA0;of&#xA0;the&#xA0;elements&#xA0;of&#xA0;LU<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;typedef&#xA0;typename&#xA0;FloatVector::value_type&#xA0;Float;<br/>
<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;check&#xA0;simple&#xA0;vector&#xA0;class&#xA0;specifications<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;CheckSimpleVector&lt;Float,&#xA0;FloatVector&gt;();<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;CheckSimpleVector&lt;size_t,&#xA0;SizeVector&gt;();<br/>
<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;size_t&#xA0;&#xA0;i,&#xA0;j;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;some&#xA0;temporary&#xA0;indices<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;const&#xA0;Float&#xA0;zero(&#xA0;0&#xA0;);&#xA0;//&#xA0;the&#xA0;value&#xA0;zero&#xA0;as&#xA0;a&#xA0;Float&#xA0;object<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;size_t&#xA0;&#xA0;imax;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;row&#xA0;index&#xA0;of&#xA0;maximum&#xA0;element<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;size_t&#xA0;&#xA0;jmax;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;column&#xA0;indx&#xA0;of&#xA0;maximum&#xA0;element<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;Float&#xA0;&#xA0;&#xA0;&#xA0;emax;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;maximum&#xA0;absolute&#xA0;value<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;size_t&#xA0;&#xA0;p;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;count&#xA0;pivots<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;int&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;sign;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;sign&#xA0;of&#xA0;the&#xA0;permutation<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;Float&#xA0;&#xA0;&#xA0;etmp;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;temporary&#xA0;element<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;Float&#xA0;&#xA0;&#xA0;pivot;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;pivot&#xA0;element<br/>
<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;-------------------------------------------------------<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;size_t&#xA0;n&#xA0;=&#xA0;ip.size();<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;CppADUsageError(<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;jp.size()&#xA0;==&#xA0;n,<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&quot;Error&#xA0;in&#xA0;LuFactor:&#xA0;jp&#xA0;must&#xA0;have&#xA0;size&#xA0;equal&#xA0;to&#xA0;n&quot;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;);<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;CppADUsageError(<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;LU.size()&#xA0;==&#xA0;n&#xA0;*&#xA0;n,<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&quot;Error&#xA0;in&#xA0;LuFactor:&#xA0;LU&#xA0;must&#xA0;have&#xA0;size&#xA0;equal&#xA0;to&#xA0;n&#xA0;*&#xA0;m&quot;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;);<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;-------------------------------------------------------<br/>
<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;initialize&#xA0;row&#xA0;and&#xA0;column&#xA0;order&#xA0;in&#xA0;matrix&#xA0;not&#xA0;yet&#xA0;pivoted<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;for(i&#xA0;=&#xA0;0;&#xA0;i&#xA0;&lt;&#xA0;n;&#xA0;i++)<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{&#xA0;&#xA0;&#xA0;&#xA0;ip[i]&#xA0;=&#xA0;i;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;jp[i]&#xA0;=&#xA0;i;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;initialize&#xA0;the&#xA0;sign&#xA0;of&#xA0;the&#xA0;permutation<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;sign&#xA0;=&#xA0;1;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;---------------------------------------------------------<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;Reduce&#xA0;the&#xA0;matrix&#xA0;P&#xA0;to&#xA0;L&#xA0;*&#xA0;U&#xA0;using&#xA0;n&#xA0;pivots<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;for(p&#xA0;=&#xA0;0;&#xA0;p&#xA0;&lt;&#xA0;n;&#xA0;p++)<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;determine&#xA0;row&#xA0;and&#xA0;column&#xA0;corresponding&#xA0;to&#xA0;element&#xA0;of&#xA0;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;maximum&#xA0;absolute&#xA0;value&#xA0;in&#xA0;remaining&#xA0;part&#xA0;of&#xA0;P<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;imax&#xA0;=&#xA0;jmax&#xA0;=&#xA0;n;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;emax&#xA0;=&#xA0;zero;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;for(i&#xA0;=&#xA0;p;&#xA0;i&#xA0;&lt;&#xA0;n;&#xA0;i++)<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{&#xA0;&#xA0;&#xA0;&#xA0;for(j&#xA0;=&#xA0;p;&#xA0;j&#xA0;&lt;&#xA0;n;&#xA0;j++)<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{&#xA0;&#xA0;&#xA0;&#xA0;CppADUnknownError(<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;(ip[i]&#xA0;&lt;&#xA0;n)&#xA0;&amp;&#xA0;(jp[j]&#xA0;&lt;&#xA0;n)<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;);<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;etmp&#xA0;=&#xA0;LU[&#xA0;ip[i]&#xA0;*&#xA0;n&#xA0;+&#xA0;jp[j]&#xA0;];<br/>
<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;check&#xA0;if&#xA0;maximum&#xA0;absolute&#xA0;value&#xA0;so&#xA0;far<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;if(&#xA0;AbsGeq&#xA0;(etmp,&#xA0;emax)&#xA0;)<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{&#xA0;&#xA0;&#xA0;&#xA0;imax&#xA0;=&#xA0;i;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;jmax&#xA0;=&#xA0;j;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;emax&#xA0;=&#xA0;etmp;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;CppADUsageError(&#xA0;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;(imax&#xA0;&lt;&#xA0;n)&#xA0;&amp;&#xA0;(jmax&#xA0;&lt;&#xA0;n)&#xA0;,<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&quot;AbsGeq&#xA0;must&#xA0;return&#xA0;true&#xA0;when&#xA0;second&#xA0;argument&#xA0;is&#xA0;zero&quot;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;);<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;if(&#xA0;imax&#xA0;!=&#xA0;p&#xA0;)<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;switch&#xA0;rows&#xA0;so&#xA0;max&#xA0;absolute&#xA0;element&#xA0;is&#xA0;in&#xA0;row&#xA0;p<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;i&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;=&#xA0;ip[p];<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;ip[p]&#xA0;&#xA0;&#xA0;&#xA0;=&#xA0;ip[imax];<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;ip[imax]&#xA0;=&#xA0;i;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;sign&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;=&#xA0;-sign;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;if(&#xA0;jmax&#xA0;!=&#xA0;p&#xA0;)<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;switch&#xA0;columns&#xA0;so&#xA0;max&#xA0;absolute&#xA0;element&#xA0;is&#xA0;in&#xA0;column&#xA0;p<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;j&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;=&#xA0;jp[p];<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;jp[p]&#xA0;&#xA0;&#xA0;&#xA0;=&#xA0;jp[jmax];<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;jp[jmax]&#xA0;=&#xA0;j;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;sign&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;=&#xA0;-sign;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;pivot&#xA0;using&#xA0;the&#xA0;max&#xA0;absolute&#xA0;element<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;pivot&#xA0;&#xA0;&#xA0;=&#xA0;LU[&#xA0;ip[p]&#xA0;*&#xA0;n&#xA0;+&#xA0;jp[p]&#xA0;];<br/>
<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;check&#xA0;for&#xA0;determinant&#xA0;equal&#xA0;to&#xA0;zero<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;if(&#xA0;pivot&#xA0;==&#xA0;zero&#xA0;)<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;abort&#xA0;the&#xA0;mission<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;return&#xA0;&#xA0;&#xA0;0;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}<br/>
<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;Reduce&#xA0;U&#xA0;by&#xA0;the&#xA0;elementary&#xA0;transformations&#xA0;that&#xA0;maps&#xA0;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;LU(&#xA0;ip[p],&#xA0;jp[p]&#xA0;)&#xA0;to&#xA0;one.&#xA0;&#xA0;Only&#xA0;need&#xA0;transform&#xA0;elements<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;above&#xA0;the&#xA0;diagonal&#xA0;in&#xA0;U&#xA0;and&#xA0;LU(&#xA0;ip[p]&#xA0;,&#xA0;jp[p]&#xA0;)&#xA0;is<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;corresponding&#xA0;value&#xA0;below&#xA0;diagonal&#xA0;in&#xA0;L.<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;for(j&#xA0;=&#xA0;p+1;&#xA0;j&#xA0;&lt;&#xA0;n;&#xA0;j++)<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;LU[&#xA0;ip[p]&#xA0;*&#xA0;n&#xA0;+&#xA0;jp[j]&#xA0;]&#xA0;/=&#xA0;pivot;<br/>
<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;Reduce&#xA0;U&#xA0;by&#xA0;the&#xA0;elementary&#xA0;transformations&#xA0;that&#xA0;maps&#xA0;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;LU(&#xA0;ip[i],&#xA0;jp[p]&#xA0;)&#xA0;to&#xA0;zero.&#xA0;Only&#xA0;need&#xA0;transform&#xA0;elements&#xA0;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;above&#xA0;the&#xA0;diagonal&#xA0;in&#xA0;U&#xA0;and&#xA0;LU(&#xA0;ip[i],&#xA0;jp[p]&#xA0;)&#xA0;is&#xA0;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;corresponding&#xA0;value&#xA0;below&#xA0;diagonal&#xA0;in&#xA0;L.<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;for(i&#xA0;=&#xA0;p+1;&#xA0;i&#xA0;&lt;&#xA0;n;&#xA0;i++&#xA0;)<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{&#xA0;&#xA0;&#xA0;&#xA0;etmp&#xA0;=&#xA0;LU[&#xA0;ip[i]&#xA0;*&#xA0;n&#xA0;+&#xA0;jp[p]&#xA0;];<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;for(j&#xA0;=&#xA0;p+1;&#xA0;j&#xA0;&lt;&#xA0;n;&#xA0;j++)<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{&#xA0;&#xA0;&#xA0;&#xA0;LU[&#xA0;ip[i]&#xA0;*&#xA0;n&#xA0;+&#xA0;jp[j]&#xA0;]&#xA0;-=&#xA0;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;etmp&#xA0;*&#xA0;LU[&#xA0;ip[p]&#xA0;*&#xA0;n&#xA0;+&#xA0;jp[j]&#xA0;];<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}&#xA0;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;return&#xA0;sign;<br/>
}<br/>
}&#xA0;//&#xA0;END&#xA0;CppAD&#xA0;namespace&#xA0;<br/>
</span>
</font></code>

<hr/>Input File: CppAD\LuFactor.h

</body>
</html>
