<?xml version='1.0'?>
<?xml-stylesheet type='text/xsl' href='pmathml.xsl'?>
<html xmlns='http://www.w3.org/1999/xhtml'>
<head>
<title>Using AD Class Objects</title>
<meta name="description" content="Using AD Class Objects"/>
<meta name="keywords" content=" "/><style type='text/css'>
BODY { color : black }
BODY { background-color : white }
</style>
</head>
<body>
<div align='right'><a href="installwindows.xml" target="_top">previous</a>
&#xA0;&#xA0;<a href="default.xml" target="_top">next</a>
&#xA0;&#xA0;<a href="_contents.xml" target="_top">contents</a>
&#xA0;&#xA0;<a href="_reference.xml" target="_top">reference</a>
&#xA0;&#xA0;<a href="_index.xml" target="_top">index</a>
&#xA0;&#xA0;<a href="_search.xml" target="_top">search</a>
&#xA0;&#xA0;<a href="_external.xml" target="_top">external</a>
&#xA0;&#xA0;This:&#xA0;&#xA0;<a href="ad.xml" target="_top">section</a>, <a href="ad_frame1.xml" target="_top">frame</a></div>
<hr/><center><b><big><big>Using AD Class Objects</big></big></b></center>
<br/>
<b><big><a name="Description">Description</a></big></b>
<br/>
The template class
<code><font color="blue"><span style='white-space: nowrap'>AD&lt;</span></font></code><i><span style='white-space: nowrap'>Base</span></i><code><font color="blue"><span style='white-space: nowrap'>&gt;</span></font></code> 
is defined by including 
the file <a href="cppad.xml" target="_top"><span style='white-space: nowrap'>CppAD.h</span></a>
.
The purpose of this class is to record 
<code><font color="blue"><span style='white-space: nowrap'>AD&lt;</span></font></code><i><span style='white-space: nowrap'>Base</span></i><code><font color="blue"><span style='white-space: nowrap'>&gt;</span></font></code> operations on a corresponding tape 
so that derivatives can be calculated.
The sections listed below describe the methods
that are available for objects in this template class.

<br/>
<br/>
<b><big><a name="Contents">Contents</a></big></b>
<br/>
<table>
<tr><td><a href="default.xml" target="_top">Default</a></td><td>The&#xA0;Default&#xA0;AD&#xA0;Constructor</td></tr><tr><td><a href="frombase.xml" target="_top">FromBase</a></td><td>Construct&#xA0;An&#xA0;AD&#xA0;Object&#xA0;From&#xA0;its&#xA0;Base&#xA0;Type</td></tr><tr><td><a href="copy.xml" target="_top">Copy</a></td><td>Creating&#xA0;A&#xA0;Copy&#xA0;of&#xA0;an&#xA0;AD&#xA0;Variable</td></tr><tr><td><a href="value.xml" target="_top">Value</a></td><td>Base&#xA0;Type&#xA0;Value</td></tr><tr><td><a href="neg.xml" target="_top">Neg</a></td><td>Negation:&#xA0;The&#xA0;Unary&#xA0;Minus&#xA0;Operator</td></tr><tr><td><a href="binaryop.xml" target="_top">BinaryOp</a></td><td>Base&#xA0;Type&#xA0;Binary&#xA0;Operators</td></tr><tr><td><a href="compeq.xml" target="_top">CompEq</a></td><td>Computed&#xA0;Assignment&#xA0;Operators</td></tr><tr><td><a href="compare.xml" target="_top">Compare</a></td><td>The&#xA0;AD&#xA0;Comparison&#xA0;Operators</td></tr><tr><td><a href="eq.xml" target="_top">Eq</a></td><td>The&#xA0;AD&#xA0;Assignment&#xA0;Operator</td></tr><tr><td><a href="output.xml" target="_top">Output</a></td><td>Writing&#xA0;an&#xA0;AD&#xA0;Value&#xA0;on&#xA0;a&#xA0;Output&#xA0;Stream</td></tr><tr><td><a href="printfor.xml" target="_top">PrintFor</a></td><td>Printing&#xA0;Values&#xA0;During&#xA0;Forward&#xA0;Mode&#xA0;Calculations</td></tr><tr><td><a href="stdmathlib.xml" target="_top">StdMathLib</a></td><td>The&#xA0;Standard&#xA0;Library&#xA0;Unary&#xA0;Math&#xA0;Functions</td></tr><tr><td><a href="condexp.xml" target="_top">CondExp</a></td><td>The&#xA0;Conditional&#xA0;Expression&#xA0;Function</td></tr><tr><td><a href="discrete.xml" target="_top">Discrete</a></td><td>User&#xA0;Defined&#xA0;Discrete&#xA0;Functions</td></tr><tr><td><a href="boolfun.xml" target="_top">BoolFun</a></td><td>Defining&#xA0;Boolean&#xA0;Functions&#xA0;with&#xA0;AD&#xA0;Arguments</td></tr></table>
<hr/>Input File: CppAD\local\UserAD.h

</body>
</html>
