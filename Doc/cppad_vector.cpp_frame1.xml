<?xml version='1.0'?>
<?xml-stylesheet type='text/xsl' href='pmathml.xsl'?>
<html xmlns='http://www.w3.org/1999/xhtml'>
<head>
<title>CppAD::vector Template Class: Example and Test</title>
<meta name="description" content="CppAD::vector Template Class: Example and Test"/>
<meta name="keywords" content=" vector Cppad Cppad::vector example test "/><style type='text/css'>
BODY { color : black }
BODY { background-color : white }
</style>
</head>
<body>
<div align='right'><a href="cppad_vector.xml" target="_top">previous</a>
&#xA0;&#xA0;<a href="cppad_vector.h.xml" target="_top">next</a>
&#xA0;&#xA0;<a href="_contents.xml" target="_top">contents</a>
&#xA0;&#xA0;<a href="_reference.xml" target="_top">reference</a>
&#xA0;&#xA0;<a href="_index.xml" target="_top">index</a>
&#xA0;&#xA0;<a href="_search.xml" target="_top">search</a>
&#xA0;&#xA0;<a href="_external.xml" target="_top">external</a>
&#xA0;&#xA0;This:&#xA0;&#xA0;<a href="cppad_vector.cpp.xml" target="_top">section</a>, <a href="cppad_vector.cpp_frame1.xml" target="_top">frame</a></div>
<hr/><center><b><big><big>CppAD::vector Template Class: Example and Test</big></big></b></center>
<code><font color="blue"><span style='white-space: nowrap'><br/>
<br/>
#&#xA0;include&#xA0;&lt;CppAD/CppAD_vector.h&gt;<br/>
#&#xA0;include&#xA0;&lt;sstream&gt;&#xA0;//&#xA0;sstream&#xA0;and&#xA0;string&#xA0;are&#xA0;used&#xA0;to&#xA0;test&#xA0;output&#xA0;operation<br/>
#&#xA0;include&#xA0;&lt;string&gt;<br/>
<br/>
bool&#xA0;CppAD_vector(void)<br/>
{&#xA0;&#xA0;&#xA0;&#xA0;bool&#xA0;ok&#xA0;=&#xA0;true;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;using&#xA0;CppAD::vector;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;so&#xA0;can&#xA0;use&#xA0;vector&#xA0;instead&#xA0;of&#xA0;CppAD::vector&#xA0;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;typedef&#xA0;double&#xA0;Type;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;change&#xA0;double&#xA0;to&#xA0;test&#xA0;other&#xA0;types<br/>
<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;vector&lt;Type&gt;&#xA0;x;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;default&#xA0;constructor&#xA0;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;ok&#xA0;&amp;=&#xA0;(x.size()&#xA0;==&#xA0;0);<br/>
<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;x.resize(2);&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;resize&#xA0;and&#xA0;set&#xA0;element&#xA0;assignment<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;ok&#xA0;&amp;=&#xA0;(x.size()&#xA0;==&#xA0;2);<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;x[0]&#xA0;=&#xA0;Type(0);<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;x[1]&#xA0;=&#xA0;Type(1);<br/>
<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;vector&lt;Type&gt;&#xA0;y(2);&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;sizing&#xA0;constructor<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;ok&#xA0;&amp;=&#xA0;(y.size()&#xA0;==&#xA0;2);<br/>
<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;const&#xA0;vector&lt;Type&gt;&#xA0;z(x);&#xA0;//&#xA0;copy&#xA0;constructor&#xA0;and&#xA0;const&#xA0;element&#xA0;access<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;ok&#xA0;&amp;=&#xA0;(z.size()&#xA0;==&#xA0;2);<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;ok&#xA0;&amp;=&#xA0;(&#xA0;(z[0]&#xA0;==&#xA0;Type(0))&#xA0;&amp;&amp;&#xA0;(z[1]&#xA0;==&#xA0;Type(1))&#xA0;);<br/>
<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;x[0]&#xA0;=&#xA0;2;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;modify&#xA0;so&#xA0;that&#xA0;assignment&#xA0;changes&#xA0;x<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;x&#xA0;=&#xA0;y&#xA0;=&#xA0;z;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;vector&#xA0;assignment<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;ok&#xA0;&amp;=&#xA0;(&#xA0;(x[0]&#xA0;==&#xA0;Type(0))&#xA0;&amp;&amp;&#xA0;(x[1]&#xA0;==&#xA0;Type(1))&#xA0;);<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;ok&#xA0;&amp;=&#xA0;(&#xA0;(y[0]&#xA0;==&#xA0;Type(0))&#xA0;&amp;&amp;&#xA0;(y[1]&#xA0;==&#xA0;Type(1))&#xA0;);<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;ok&#xA0;&amp;=&#xA0;(&#xA0;(z[0]&#xA0;==&#xA0;Type(0))&#xA0;&amp;&amp;&#xA0;(z[1]&#xA0;==&#xA0;Type(1))&#xA0;);<br/>
<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;test&#xA0;of&#xA0;output<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;std::string&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;correct=&#xA0;&quot;{&#xA0;0,&#xA0;1&#xA0;}&quot;;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;std::string&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;str;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;std::ostringstream&#xA0;buf;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;buf&#xA0;&lt;&lt;&#xA0;z;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;str&#xA0;=&#xA0;buf.str();<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;ok&#xA0;&amp;=&#xA0;(str&#xA0;==&#xA0;correct);<br/>
<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;return&#xA0;ok;<br/>
}<br/>
<br/>
</span></font></code>
<hr/>Input File: Example\CppAD_vector.cpp

</body>
</html>
