<?xml version='1.0'?>
<?xml-stylesheet type='text/xsl' href='pmathml.xsl'?>
<html xmlns='http://www.w3.org/1999/xhtml'>
<head>
<title>Determinant of a Minor: Example and Test</title>
<meta name="description" content="Determinant of a Minor: Example and Test"/>
<meta name="keywords" content=" determinant by minors example test "/><style type='text/css'>
BODY { color : black }
BODY { background-color : white }
</style>
</head>
<body>
<div align='right'><a href="detofminor.xml" target="_top">previous</a>
&#xA0;&#xA0;<a href="detofminor.h.xml" target="_top">next</a>
&#xA0;&#xA0;<a href="_contents.xml" target="_top">contents</a>
&#xA0;&#xA0;<a href="_reference.xml" target="_top">reference</a>
&#xA0;&#xA0;<a href="_index.xml" target="_top">index</a>
&#xA0;&#xA0;<a href="_search.xml" target="_top">search</a>
&#xA0;&#xA0;<a href="_external.xml" target="_top">external</a>
&#xA0;&#xA0;This:&#xA0;&#xA0;<a href="detofminor.cpp.xml" target="_top">section</a>, <a href="detofminor.cpp_frame1.xml" target="_top">frame</a></div>
<hr/>


<center><b><big><big>Determinant of a Minor: Example and Test</big></big></b></center>
<code><font color="blue"><span style='white-space: nowrap'><br/>
<br/>
#&#xA0;include&#xA0;&lt;CppAD/CppAD.h&gt;<br/>
#&#xA0;include&#xA0;&quot;DetOfMinor.h&quot;<br/>
<br/>
bool&#xA0;DetOfMinor()<br/>
{&#xA0;&#xA0;&#xA0;&#xA0;bool&#xA0;ok&#xA0;=&#xA0;true;<br/>
<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;using&#xA0;namespace&#xA0;CppAD;<br/>
<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;dimension&#xA0;of&#xA0;the&#xA0;matrix<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;size_t&#xA0;m&#xA0;=&#xA0;3;<br/>
<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;size_t&#xA0;i;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;CppADvector&lt;size_t&gt;&#xA0;r(m&#xA0;+&#xA0;1);<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;CppADvector&lt;size_t&gt;&#xA0;c(m&#xA0;+&#xA0;1);<br/>
<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;double&#xA0;det;<br/>
<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;for(i=&#xA0;0;&#xA0;i&#xA0;&lt;&#xA0;m;&#xA0;i++)<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{&#xA0;&#xA0;&#xA0;&#xA0;r[i]&#xA0;=&#xA0;i+1;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;c[i]&#xA0;=&#xA0;i+1;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}&#xA0;&#xA0;&#xA0;&#xA0;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;r[m]&#xA0;=&#xA0;0;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;c[m]&#xA0;=&#xA0;0;<br/>
<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;double&#xA0;&#xA0;a[]&#xA0;=&#xA0;{<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;1.,&#xA0;2.,&#xA0;3.,&#xA0;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;3.,&#xA0;2.,&#xA0;1.,&#xA0;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;2.,&#xA0;1.,&#xA0;2.<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;};<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;CppADvector&lt;double&gt;&#xA0;A(9);<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;for(i&#xA0;=&#xA0;0;&#xA0;i&#xA0;&lt;&#xA0;9;&#xA0;i++)<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;A[i]&#xA0;=&#xA0;a[i];<br/>
<br/>
<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;evaluate&#xA0;the&#xA0;function<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;det&#xA0;=&#xA0;DetOfMinor(A,&#xA0;m,&#xA0;m,&#xA0;r,&#xA0;c);<br/>
<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;ok&#xA0;&amp;=&#xA0;(det&#xA0;==&#xA0;(double)&#xA0;(1*(2*2-1*1)&#xA0;-&#xA0;2*(3*2-1*2)&#xA0;+&#xA0;3*(3*1-2*2))&#xA0;);<br/>
<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;evaluate&#xA0;minor&#xA0;corresponding&#xA0;to&#xA0;row&#xA0;index&#xA0;0,&#xA0;column&#xA0;index&#xA0;1<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;by&#xA0;skiping&#xA0;thoes&#xA0;indices&#xA0;in&#xA0;the&#xA0;linked&#xA0;list<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;r[m]&#xA0;=&#xA0;1;<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;c[0]&#xA0;=&#xA0;2;<br/>
<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;det&#xA0;=&#xA0;DetOfMinor(A,&#xA0;m,&#xA0;m-1,&#xA0;r,&#xA0;c);<br/>
<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;ok&#xA0;&amp;=&#xA0;(det&#xA0;==&#xA0;(double)&#xA0;(3*2-1*2)&#xA0;);<br/>
<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;return&#xA0;ok;<br/>
}<br/>
<br/>
</span></font></code>
<hr/>Input File: Example\DetOfMinor.cpp

</body>
</html>
