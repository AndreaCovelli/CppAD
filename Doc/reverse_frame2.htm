<html><head>
<title>Reverse Mode</title>
<meta name="description" content="Reverse Mode">
<meta name="keywords" content=" reverse mode derivative Taylor coefficient "><style type='text/css'>
BODY { color : black }
BODY { background-color : white }
</style>
</head>
<body>
<div align='right'>&nbsp;&nbsp;This:&nbsp;&nbsp;<a href="reverse.htm" target="_top">section</a>, <a href="reverse_frame2.htm" target="_top">frame</a></div>

<b><big><a name="Description">Description</a></big></b>
<br>
We are given <code>
<span style='white-space: nowrap'>&nbsp;F&nbsp;:&nbsp;B^n&nbsp;\rightarrow&nbsp;B^m</span></code>
,
where <code>
<span style='white-space: nowrap'>&nbsp;n</span></code>
 is the dimension of the 
<a href="adfun_frame2.htm#Domain" target="frame1"><i><span style='white-space: nowrap'>domain</span></i></a>
 space for <i>F</i>,
and <code>
<span style='white-space: nowrap'>&nbsp;m</span></code>
 is the dimension of the 
<a href="adfun_frame2.htm#Range" target="frame1"><i><span style='white-space: nowrap'>range</span></i></a>
 space for <i>F</i>.
The <code><font color="blue"></font></code><i><span style='white-space: nowrap'>F</span></i><code><font color="blue"><span style='white-space: nowrap'>.Reverse</span></font></code> routine evaluates the partial derivatives 
with respect to <code>
<span style='white-space: nowrap'>&nbsp;x^{(0)}</span></code>

of the functions
<code>
<span style='white-space: nowrap'>&nbsp;W^{(k)}&nbsp;:&nbsp;B&nbsp;\times&nbsp;B^{n&nbsp;\times&nbsp;p}&nbsp;\rightarrow&nbsp;B</span></code>
 
defined by
<code>
<span style='white-space: nowrap'>&nbsp;\[<br>
\begin{array}{rcl}<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;X(t,&nbsp;x)&nbsp;&amp;&nbsp;=&nbsp;&amp;&nbsp;x^{(0)}&nbsp;+&nbsp;x^{(1)}&nbsp;t&nbsp;+&nbsp;\cdots&nbsp;+&nbsp;x^{(p-1)}&nbsp;t^{p-1}&nbsp;\\<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;W(t,&nbsp;x)&nbsp;&amp;&nbsp;=&nbsp;&amp;&nbsp;\sum_{i=0}^{n-1}&nbsp;w_i&nbsp;F_i&nbsp;[&nbsp;X(t,&nbsp;x)&nbsp;]&nbsp;\\<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;W^{(k)}&nbsp;(t,&nbsp;x)&nbsp;&amp;&nbsp;=&nbsp;&amp;&nbsp;\frac{1}{k&nbsp;!}&nbsp;\Dpow{k}{t}&nbsp;W(t,&nbsp;x)&nbsp;<br>
\end{array}<br>
\]&nbsp;</span></code>

We note that <code>
<span style='white-space: nowrap'>&nbsp;W^{(k)}&nbsp;(0,&nbsp;x)&nbsp;\in&nbsp;B</span></code>
 is the <i>k</i>-th order
<a href="glossary_frame1.htm#Taylor Coefficient" target="frame1"><i><span style='white-space: nowrap'>Taylor&nbsp;coefficient</span></i></a>

for the function <code>
<span style='white-space: nowrap'>&nbsp;W(&nbsp;\cdot&nbsp;,&nbsp;x)</span></code>

and <code>
<span style='white-space: nowrap'>&nbsp;x^{(k)}&nbsp;\in&nbsp;B^n</span></code>
 is the <i>k</i>-th order 
Taylor coefficient for <code>
<span style='white-space: nowrap'>&nbsp;X(&nbsp;\cdot&nbsp;,&nbsp;x&nbsp;)</span></code>

(see below for how <code>
<span style='white-space: nowrap'>&nbsp;x^{(k)}&nbsp;\in&nbsp;B^n</span></code>
 is specified).

<br>
<br>
<b><big><a name="F">F</a></big></b>
<br>
The object <i>F</i> has prototype
<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font></code><i><span style='white-space: nowrap'>ADFun&lt;</span></i><code><font color="blue"><span style='white-space: nowrap'>Base</span></font></code><i><span style='white-space: nowrap'>&gt;&nbsp;</span></i><code><font color="blue"><span style='white-space: nowrap'>F</span></font></code><i><span style='white-space: nowrap'><br>
</span></i><br>
<b><big><a name="Reverse">Reverse</a></big></b>
<br>
The function <code><font color="blue">Reverse</font></code> has prototype
<code><font color="blue"><span style='white-space: nowrap'><br>
template&nbsp;&lt;typename&nbsp;</span></font></code><i><span style='white-space: nowrap'>Base</span></i><code><font color="blue"><span style='white-space: nowrap'>&gt;<br>
template&nbsp;&lt;typename&nbsp;</span></font></code><i><span style='white-space: nowrap'>VectorBase</span></i><code><font color="blue"><span style='white-space: nowrap'>&gt;<br>
</span></font></code><i><span style='white-space: nowrap'>VectorBase</span></i><code><font color="blue"><span style='white-space: nowrap'>&nbsp;ADFun&lt;</span></font></code><i><span style='white-space: nowrap'>Base</span></i><code><font color="blue"><span style='white-space: nowrap'>&gt;::Reverse(size_t&nbsp;</span></font></code><i><span style='white-space: nowrap'>p</span></i><code><font color="blue"><span style='white-space: nowrap'>,&nbsp;const&nbsp;</span></font></code><i><span style='white-space: nowrap'>VectorBase</span></i><code><font color="blue"><span style='white-space: nowrap'>&nbsp;&amp;</span></font></code><i><span style='white-space: nowrap'>up</span></i><code><font color="blue"><span style='white-space: nowrap'>)<br>
</span></font></code><br>
<b><big><a name="VectorBase">VectorBase</a></big></b>
<br>
The type <i>VectorBase</i> must be a <a href="simplevector.htm" target="_top"><span style='white-space: nowrap'>SimpleVector</span></a>
 class with
<a href="simplevector_frame1.htm#Elements of Specified Type" target="frame1"><i><span style='white-space: nowrap'>elements&nbsp;of&nbsp;type&nbsp;Base</span></i></a>
.
The routine <a href="checksimplevector.htm" target="_top"><span style='white-space: nowrap'>CheckSimpleVector</span></a>
 will generate an error message
if this is not the case.

<br>
<br>
<b><big><a name="x">x</a></big></b>
<br>
For <code>
<span style='white-space: nowrap'>&nbsp;k&nbsp;=&nbsp;0&nbsp;,&nbsp;\ldots&nbsp;,&nbsp;p-1</span></code>
,
the <i>k</i>-th order Taylor coefficient 
<code>
<span style='white-space: nowrap'>&nbsp;x^{(k)}&nbsp;\in&nbsp;B^n</span></code>
 is the value of <i>xk</i> in
the previous call to <code><font color="blue"></font></code><i><span style='white-space: nowrap'>F</span></i><code><font color="blue"><span style='white-space: nowrap'>.Forward(</span></font></code><i><span style='white-space: nowrap'>k</span></i><code><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font></code><i><span style='white-space: nowrap'>xk</span></i><code><font color="blue"><span style='white-space: nowrap'>)</span></font></code>. 
If there is no previous call with <code>
<span style='white-space: nowrap'>&nbsp;k&nbsp;=&nbsp;0</span></code>
,
<code>
<span style='white-space: nowrap'>&nbsp;x^{(0)}</span></code>
 is the value of the independent variables when <i>F</i> 
was constructed as an <a href="adfun.htm" target="_top"><span style='white-space: nowrap'>ADFun</span></a>
 object.

<br>
<br>
<b><big><a name="w">w</a></big></b>
<br>
The weighting vector <i>w</i> is a vector of length <code>
<span style='white-space: nowrap'>&nbsp;m</span></code>

that specifies the function <code>
<span style='white-space: nowrap'>&nbsp;W</span></code>
.


<br>
<br>
<b><big><a name="Order">Order</a></big></b>
<br>
The function call
<a href="adfun_frame2.htm#Order" target="frame1"><i><span style='white-space: nowrap'>F.Order()</span></i></a>
 returns the highest order of the 
Taylor coefficients currently stored in <i>F</i>.
This must be greater than or equal to <code>
<span style='white-space: nowrap'>&nbsp;p-1</span></code>
 when
<code><font color="blue"></font></code><i><span style='white-space: nowrap'>F</span></i><code><font color="blue"><span style='white-space: nowrap'>.Forward(</span></font></code><i><span style='white-space: nowrap'>p</span></i><code><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font></code><i><span style='white-space: nowrap'>xp</span></i><code><font color="blue"><span style='white-space: nowrap'>)</span></font></code> is called.
The value <code><font color="blue"></font></code><i><span style='white-space: nowrap'>F</span></i><code><font color="blue"><span style='white-space: nowrap'>.Order()</span></font></code> is not affected by this operation.

<br>
<br>
<b><big><a name="Memory">Memory</a></big></b>
<br>
If the function <code><font color="blue"></font></code><i><span style='white-space: nowrap'>F</span></i><code><font color="blue"><span style='white-space: nowrap'>.Reverse</span></font></code> has never been called 
with as large a value for <i>p</i>,
a large amount of memory proportional to the 
<a href="adfun_frame2.htm#Size" target="frame1"><i><span style='white-space: nowrap'>size</span></i></a>
 of <i>F</i> times <i>p</i>
is allocated for this calculation.
You can use the 
<a href="adfun_frame2.htm#Memory" target="frame1"><i><span style='white-space: nowrap'>F.Memory()</span></i></a>
 function to determine
how much memory is required.

<br>
<br>
<b><big><a name="dw">dw</a></big></b>
<br>
The return value <i>dw</i> is a vector of
length <code>
<span style='white-space: nowrap'>&nbsp;n&nbsp;\times&nbsp;p</span></code>
.
For <code>
<span style='white-space: nowrap'>&nbsp;j&nbsp;=&nbsp;0,&nbsp;\ldots,&nbsp;n-1</span></code>
 and <code>
<span style='white-space: nowrap'>&nbsp;k&nbsp;=&nbsp;0&nbsp;,&nbsp;\ldots&nbsp;,&nbsp;p-1</span></code>

<code>
<span style='white-space: nowrap'>&nbsp;\[<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dw[&nbsp;j&nbsp;*&nbsp;p&nbsp;+&nbsp;k&nbsp;]&nbsp;=&nbsp;\D{&nbsp;W^{(k)}&nbsp;}{&nbsp;x_j^{(0)}&nbsp;}&nbsp;(0,&nbsp;x)&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\hspace{2cm}&nbsp;(*)<br>
\]&nbsp;</span></code>


<br>
<br>
<b><a name="dw.First Order">First Order</a></b>
<br>
Suppose  <code>
<span style='white-space: nowrap'>&nbsp;p&nbsp;=&nbsp;1</span></code>
 and <code>
<span style='white-space: nowrap'>&nbsp;w</span></code>
 is the <i>i</i>-th 
<a href="glossary_frame1.htm#Elementary Vector" target="frame1"><i><span style='white-space: nowrap'>elementary&nbsp;vector</span></i></a>
.
It follows that <code>
<span style='white-space: nowrap'>&nbsp;k&nbsp;=&nbsp;0</span></code>
 in (*) and
<code>
<span style='white-space: nowrap'>&nbsp;\[<br>
\begin{array}{rcl}<br>
dw[&nbsp;j&nbsp;]&nbsp;&amp;&nbsp;=&nbsp;&amp;&nbsp;\D{&nbsp;W^{(0)}&nbsp;}{&nbsp;x_j^{(0)}&nbsp;}&nbsp;(0,&nbsp;x)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;&nbsp;=&nbsp;&amp;&nbsp;\D{&nbsp;W&nbsp;}{&nbsp;x_j^{(0)}&nbsp;}&nbsp;(0,&nbsp;x)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;&nbsp;=&nbsp;&amp;&nbsp;\D{&nbsp;F_i&nbsp;\circ&nbsp;X&nbsp;}{&nbsp;x_j^{(0)}&nbsp;}&nbsp;(0,&nbsp;x)&nbsp;&nbsp;\\<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;&nbsp;=&nbsp;&amp;&nbsp;\D{&nbsp;F_i&nbsp;}{&nbsp;x_j^{(0)}&nbsp;}&nbsp;(&nbsp;x^{(0)}&nbsp;)<br>
\end{array}<br>
\]&nbsp;</span></code>


<br>
<br>
<b><a name="dw.Second Order">Second Order</a></b>
<br>
Suppose  <code>
<span style='white-space: nowrap'>&nbsp;p&nbsp;=&nbsp;2</span></code>
,
<code>
<span style='white-space: nowrap'>&nbsp;x^{(1)}</span></code>
 is the <i>l</i>-th
<a href="glossary_frame1.htm#Elementary Vector" target="frame1"><i><span style='white-space: nowrap'>elementary&nbsp;vector</span></i></a>

and <code>
<span style='white-space: nowrap'>&nbsp;w</span></code>
 is the <i>i</i>-th elementary vector. 
It follows that for <code>
<span style='white-space: nowrap'>&nbsp;j&nbsp;=&nbsp;0,&nbsp;\ldots,&nbsp;n-1</span></code>

<code>
<span style='white-space: nowrap'>&nbsp;\[<br>
\begin{array}{rcl}<br>
dw[&nbsp;j&nbsp;*&nbsp;2&nbsp;+&nbsp;0&nbsp;]&nbsp;<br>
&amp;&nbsp;=&nbsp;&amp;&nbsp;\D{&nbsp;F_i&nbsp;}{&nbsp;x_j^{(0)}&nbsp;}&nbsp;(&nbsp;x^{(0)}&nbsp;)<br>
\\<br>
dw[&nbsp;j&nbsp;*&nbsp;2&nbsp;+&nbsp;1&nbsp;]&nbsp;<br>
&amp;&nbsp;=&nbsp;&amp;&nbsp;\D{&nbsp;W^{(1)}&nbsp;}{&nbsp;x_j^{(0)}&nbsp;}&nbsp;(0,&nbsp;x)&nbsp;&nbsp;<br>
\\<br>
&amp;&nbsp;=&nbsp;&amp;&nbsp;<br>
\D{&nbsp;}{&nbsp;x_j^{(0)}&nbsp;}&nbsp;<br>
\D{F_i&nbsp;\circ&nbsp;X&nbsp;}{t}&nbsp;(0,&nbsp;x)&nbsp;&nbsp;<br>
\\<br>
&amp;&nbsp;=&nbsp;&amp;<br>
\D{&nbsp;}{&nbsp;x_j^{(0)}&nbsp;}&nbsp;<br>
F_i^{(1)}&nbsp;(&nbsp;x^{(0)}&nbsp;)&nbsp;*&nbsp;x^{(1)}<br>
\\<br>
&amp;&nbsp;=&nbsp;&amp;<br>
\D{&nbsp;}{&nbsp;x_j^{(0)}&nbsp;}&nbsp;<br>
\D{F_i}{x_\ell^{(0)}}&nbsp;(&nbsp;x^{(0)}&nbsp;)&nbsp;<br>
\\<br>
&amp;&nbsp;=&nbsp;&amp;<br>
\DD{F_i}{x_j^{(0)}}{x_\ell^{(0)}}&nbsp;(&nbsp;x^{(0)}&nbsp;)&nbsp;<br>
\end{array}<br>
\]&nbsp;</span></code>


<br>
<br>
<b><a name="dw.Hessian Times Direction">Hessian Times Direction</a></b>
<br>
Suppose that <i>p = 2</i> and
<i>m</i> is equal to one 
(<i>F</i> is scalar valued).
It follows that for <code>
<span style='white-space: nowrap'>&nbsp;j&nbsp;=&nbsp;0,&nbsp;\ldots,&nbsp;n-1</span></code>

<code>
<span style='white-space: nowrap'>&nbsp;\[<br>
\begin{array}{rcl}<br>
dw[&nbsp;j&nbsp;*&nbsp;2&nbsp;+&nbsp;1&nbsp;]&nbsp;<br>
&amp;&nbsp;=&nbsp;&amp;&nbsp;\D{&nbsp;W^{(1)}&nbsp;}{&nbsp;x_j^{(0)}&nbsp;}&nbsp;(0,&nbsp;x)&nbsp;&nbsp;<br>
\\<br>
&amp;&nbsp;=&nbsp;&amp;<br>
\sum_{\ell=0}^{n-1}&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\DD{F}{x_j^{(0)}}{x_\ell^{(0)}}&nbsp;(&nbsp;x^{(0)}&nbsp;)&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;x^{(1)}_\ell<br>
\\<br>
&amp;&nbsp;=&nbsp;&amp;<br>
[&nbsp;F^{(2)}&nbsp;(&nbsp;x^{(0)}&nbsp;)&nbsp;*&nbsp;x^{(1)}&nbsp;]_j<br>
\end{array}<br>
\]</span></code>



<br>
<br>
<b><big><a name="Example">Example</a></big></b>

<br>
The file
<a href="reverse.h.htm" target="_top"><span style='white-space: nowrap'>Reverse.h</span></a>

contains an example and test of the 
<a href="reverse_frame2.htm#dw.First Order" target="frame1"><i><span style='white-space: nowrap'>first</span></i></a>
 and
<a href="reverse_frame2.htm#dw.Second Order" target="frame1"><i><span style='white-space: nowrap'>second</span></i></a>
 order
calculations described above.
It returns true if it succeeds and false otherwise.
The file
<a href="hestimesdir.cpp.htm" target="_top"><span style='white-space: nowrap'>HesTimesDir.cpp</span></a>

contains an example and test of the 
<a href="reverse_frame2.htm#dw.Hessian Times Direction" target="frame1"><i><span style='white-space: nowrap'>Hessian&nbsp;times&nbsp;direction</span></i></a>

calculation described above.


<hr>Input File: CppAD\local\Reverse.h

</body>
</html>
