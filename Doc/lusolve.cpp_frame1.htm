<html><head>
<title>LuSolve With Complex Arguments: Example and Test</title>
<meta name="description" content="LuSolve With Complex Arguments: Example and Test">
<meta name="keywords" content=" complex Lusolve example test "><style type='text/css'>
BODY { color : black }
BODY { background-color : white }
</style>
</head>
<body>
<div align='right'><a href="lusolve.htm" target="_top">previous</a>
&nbsp;&nbsp;<a href="lusolve.h.htm" target="_top">next</a>
&nbsp;&nbsp;<a href="_contents.htm" target="_top">contents</a>
&nbsp;&nbsp;<a href="_reference.htm" target="_top">reference</a>
&nbsp;&nbsp;<a href="_index.htm" target="_top">index</a>
&nbsp;&nbsp;<a href="_search.htm" target="_top">search</a>
&nbsp;&nbsp;<a href="_external.htm" target="_top">external</a>
&nbsp;&nbsp;This:&nbsp;&nbsp;<a href="lusolve.cpp.htm" target="_top">section</a>, <a href="lusolve.cpp_frame1.htm" target="_top">frame</a></div>
<hr><center><b><big><big>LuSolve With Complex Arguments: Example and Test</big></big></b></center>
<code><font color="blue"><span style='white-space: nowrap'><br>
<br>
#&nbsp;include&nbsp;&lt;CppAD/LuSolve.h&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;for&nbsp;CppAD::LuSolve<br>
#&nbsp;include&nbsp;&lt;CppAD/NearEqual.h&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;for&nbsp;CppAD::NearEqual<br>
#&nbsp;include&nbsp;&lt;CppAD/CppAD_vector.h&gt;&nbsp;&nbsp;//&nbsp;for&nbsp;CppAD::vector<br>
#&nbsp;include&nbsp;&lt;complex&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;for&nbsp;std::complex<br>
<br>
typedef&nbsp;std::complex&lt;double&gt;&nbsp;Complex;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;define&nbsp;the&nbsp;Complex&nbsp;type<br>
bool&nbsp;LuSolve(void)<br>
{&nbsp;&nbsp;&nbsp;&nbsp;bool&nbsp;&nbsp;ok&nbsp;=&nbsp;true;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;using&nbsp;namespace&nbsp;CppAD;<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size_t&nbsp;&nbsp;&nbsp;n&nbsp;=&nbsp;3;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;number&nbsp;rows&nbsp;in&nbsp;A&nbsp;and&nbsp;B<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size_t&nbsp;&nbsp;&nbsp;m&nbsp;=&nbsp;2;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;number&nbsp;columns&nbsp;in&nbsp;B,&nbsp;X&nbsp;and&nbsp;S<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;A&nbsp;is&nbsp;an&nbsp;n&nbsp;by&nbsp;n&nbsp;matrix,&nbsp;B,&nbsp;X,&nbsp;and&nbsp;S&nbsp;are&nbsp;n&nbsp;by&nbsp;m&nbsp;matrices<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CppAD::vector&lt;Complex&gt;&nbsp;A(n&nbsp;*&nbsp;n),&nbsp;B(n&nbsp;*&nbsp;m),&nbsp;X(n&nbsp;*&nbsp;m)&nbsp;,&nbsp;S(n&nbsp;*&nbsp;m);<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Complex&nbsp;&nbsp;logdet;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;log&nbsp;of&nbsp;determinant&nbsp;of&nbsp;A<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;signdet;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;zero&nbsp;if&nbsp;A&nbsp;is&nbsp;singular<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Complex&nbsp;&nbsp;det;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;determinant&nbsp;of&nbsp;A<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size_t&nbsp;&nbsp;&nbsp;i,&nbsp;j,&nbsp;k;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;some&nbsp;temporary&nbsp;indices<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;set&nbsp;A&nbsp;equal&nbsp;to&nbsp;the&nbsp;n&nbsp;by&nbsp;n&nbsp;Hilbert&nbsp;Matrix<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&lt;&nbsp;n;&nbsp;i++)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(j&nbsp;=&nbsp;0;&nbsp;j&nbsp;&lt;&nbsp;n;&nbsp;j++)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A[i&nbsp;*&nbsp;n&nbsp;+&nbsp;j]&nbsp;=&nbsp;1.&nbsp;/&nbsp;(double)&nbsp;(i&nbsp;+&nbsp;j&nbsp;+&nbsp;1);<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;set&nbsp;S&nbsp;to&nbsp;the&nbsp;solution&nbsp;of&nbsp;the&nbsp;equation&nbsp;we&nbsp;will&nbsp;solve<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(j&nbsp;=&nbsp;0;&nbsp;j&nbsp;&lt;&nbsp;n;&nbsp;j++)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(k&nbsp;=&nbsp;0;&nbsp;k&nbsp;&lt;&nbsp;m;&nbsp;k++)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;S[&nbsp;j&nbsp;*&nbsp;m&nbsp;+&nbsp;k&nbsp;]&nbsp;=&nbsp;Complex(j,&nbsp;j&nbsp;+&nbsp;k);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;set&nbsp;B&nbsp;=&nbsp;A&nbsp;*&nbsp;S&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size_t&nbsp;ik;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Complex&nbsp;sum;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(k&nbsp;=&nbsp;0;&nbsp;k&nbsp;&lt;&nbsp;m;&nbsp;k++)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;for(i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&lt;&nbsp;n;&nbsp;i++)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;sum&nbsp;=&nbsp;0.;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(j&nbsp;=&nbsp;0;&nbsp;j&nbsp;&lt;&nbsp;n;&nbsp;j++)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sum&nbsp;+=&nbsp;A[i&nbsp;*&nbsp;n&nbsp;+&nbsp;j]&nbsp;*&nbsp;S[j&nbsp;*&nbsp;m&nbsp;+&nbsp;k];<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;B[i&nbsp;*&nbsp;m&nbsp;+&nbsp;k]&nbsp;=&nbsp;sum;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;solve&nbsp;the&nbsp;equation&nbsp;A&nbsp;*&nbsp;X&nbsp;=&nbsp;B&nbsp;and&nbsp;compute&nbsp;determinant&nbsp;of&nbsp;A<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;signdet&nbsp;=&nbsp;CppAD::LuSolve(n,&nbsp;m,&nbsp;A,&nbsp;B,&nbsp;X,&nbsp;logdet);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;det&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;Complex(&nbsp;signdet&nbsp;)&nbsp;*&nbsp;exp(&nbsp;logdet&nbsp;);<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;double&nbsp;cond&nbsp;&nbsp;=&nbsp;4.62963e-4;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;condition&nbsp;number&nbsp;of&nbsp;A&nbsp;when&nbsp;n&nbsp;=&nbsp;3<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;double&nbsp;determinant&nbsp;=&nbsp;1.&nbsp;/&nbsp;2160.;&nbsp;//&nbsp;determinant&nbsp;of&nbsp;A&nbsp;when&nbsp;n&nbsp;=&nbsp;3<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;double&nbsp;delta&nbsp;=&nbsp;1e-14&nbsp;/&nbsp;cond;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;accuracy&nbsp;expected&nbsp;in&nbsp;X<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;check&nbsp;determinant<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ok&nbsp;&amp;=&nbsp;CppAD::NearEqual(det,&nbsp;determinant,&nbsp;delta,&nbsp;delta);<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;check&nbsp;solution<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(ik&nbsp;=&nbsp;0;&nbsp;ik&nbsp;&lt;&nbsp;n&nbsp;*&nbsp;m;&nbsp;ik++)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ok&nbsp;&amp;=&nbsp;CppAD::NearEqual(X[ik],&nbsp;S[ik],&nbsp;delta,&nbsp;delta);<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;ok;<br>
}<br>
</span></font></code>
<hr>Input File: Example\LuSolve.cpp

</body>
</html>
