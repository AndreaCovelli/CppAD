# Improve documentation and add tests for Parameter, Variable, Independent.
#
# SvnCommit: file that made this commit.
# BoolValued.h: move Parameter and Variable fucntions into this section.
# UserAD.h: move include of LuRatio.h from here to CppAD/CppAD.h.
# Independent: improve documentation.
# Fun.h: move Parameter and Variable from here to BoolValued.h.
# VecAD.h: add Parameter, Variable, and Independent in list of exceptions.
# CppAD.h: move include of LuRatio.h from UserAD.h to here.
# WhatsNew03.omh: group Parameter and Variable cross reference to ParVar.
# glossary.omh: group Parameter and Variable cross reference to ParVar.
# WhatsNew05.omh: group Parameter and Variable cross reference to ParVar.
# WhatsNew06.omh: users view of the changes.
# ExampleList.omh: add ParVar.cpp and Independent.cpp.
# Abs.cpp: use m for dimension of dependent variable vector.
# Example.vcproj: add ParVar.cpp and Independent.cpp.
# Example.cpp: add ParVar.cpp and Independent.cpp.
# Example/Makefile.am: add ParVar.cpp and Independent.cpp.
# Makefile.am: add ParVar.h to distribution list.
add_list="
	CppAD/local/ParVar.h
	Example/ParVar.cpp
	Example/Independent.cpp
"
change_list="
	SvnCommit
	Doc.omh
	CppAD/local/BoolValued.h
	CppAD/local/UserAD.h
	CppAD/local/Independent.h
	CppAD/local/Fun.h
	CppAD/local/VecAD.h
	CppAD/CppAD.h
	configure.ac
	omh/InstallUnix.omh
	omh/WhatsNew03.omh
	omh/glossary.omh
	omh/WhatsNew05.omh
	omh/WhatsNew06.omh
	omh/InstallWindows.omh
	omh/ExampleList.omh
	Example/Abs.cpp
	Example/Example.vcproj
	Example/Example.cpp
	Example/Makefile.am
	Makefile.am
"
delete_list="
	CppAD/local/Parameter.h
"
#----------------------------------------------------------------------
# Edit section above for individual cases, section below stays the same
#----------------------------------------------------------------------
sed -e "/^[^#]/d" -e "s/^[#] *//" < SvnCommit > svn.log
count=0
for file in $add_list $change_list
do
	count=`expr $count + 1`
	ext=`echo $file | sed -e "s/.*\././"`
	if \
	[ $file != "CheckIncludeFile"  ] && \
	[ $file != "CheckIncludeOmh"   ] && \
	[ $file != "SvnCommit"         ] && \
	[ $file != "SvnCommit.sed"     ] && \
	[ $ext  != ".vcproj"           ] && \
	[ $ext  != ".vim"              ]
	then
		# automatic edits and backups
		echo "cp $file junk.$count"
		cp $file junk.$count
		sed -f SvnCommit.sed < junk.$count > $file
		diff junk.$count $file
	fi
done
for file in $add_list
do
	echo "svn add $file ?"
done
for file in $delete_list
do
	echo "svn delete $file ?"
done
response=""
while [ "$response" != "c" ] && [ "$response" != "a" ]
do
	read -p "continue [c] or abort [a] ? " response
done
if [ "$response" = "c" ]
then
	for file in $add_list
	do
		svn add $file
	done
	for file in $delete_list
	do
		svn delete $file
	done
	svn commit --file svn.log $add_list $change_list $delete_list
else
	count=0
	for file in $add_list $change_list
	do
		count=`expr $count + 1`
		ext=`echo $file | sed -e "s/.*\././"`
		if \
		[ $file != "CheckIncludeFile"  ] && \
	   	[ $file != "CheckIncludeOmh"   ] && \
	   	[ $file != "SvnCommit"         ] && \
	   	[ $file != "SvnCommit.sed"     ] && \
	   	[ $ext  != ".vcproj"           ] && \
	   	[ $ext  != ".vim"              ]
		then
			# undo the automatic edits
			echo "mv junk.$count $file"
			mv junk.$count $file
		fi
	done
fi
