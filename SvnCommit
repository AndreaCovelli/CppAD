# Create separate sections for the zero and first order Forward mode case.
#
# Reverse.h: deprecate Size and change order to taylor_size.
# ADFun.h: deprecate Size and change order to taylor_size.
# Independent.h: change VectorADBase to VectorAD.
# FunConstruct.h: VectorADBase->VectorAD, def Domain&Range, order->taylor_per
# Forward.h: move doc to Forward.omh, (changes in FunConstruct.h).
# SeqProperty.h: change Size to var_size.
# Faq.omh: change reference for Forward zero order.
# WhatsNew04.omh: change reference for Forward zero order.
# WhatsNew06.omh: users view of the changes.
# FunDeprecate.omh: deprecate the Size functions.
# Example/Forward.cpp: simplify and make notation more like documentation.
# TestMore/Forward.cpp: include old Forward.cpp in this test.
#
# SvnCommit: file that made this commit.
add_list="
	omh/Forward.omh
"
change_list="
	SvnCommit
	CppAD/local/Reverse.h
	CppAD/local/ADFun.h
	CppAD/local/Independent.h
	CppAD/local/FunConstruct.h
	CppAD/local/Forward.h
	omh/SeqProperty.omh
	omh/Faq.omh
	omh/WhatsNew04.omh
	omh/WhatsNew06.omh
	omh/FunDeprecated.omh
	Example/Forward.cpp
	TestMore/Forward.cpp
"
delete_list="
"
#----------------------------------------------------------------------
# Edit section above for individual cases, section below stays the same
#----------------------------------------------------------------------
sed -e "/^[^#]/d" -e "s/^[#] *//" < SvnCommit > svn.log
count=0
for file in $add_list $change_list
do
	count=`expr $count + 1`
	ext=`echo $file | sed -e "s/.*\././"`
	if \
	[ $file != "CheckIncludeFile"  ] && \
	[ $file != "CheckIncludeOmh"   ] && \
	[ $file != "SvnCommit"         ] && \
	[ $file != "SvnCommit.sed"     ] && \
	[ $ext  != ".vcproj"           ] && \
	[ $ext  != ".vim"              ]
	then
		# automatic edits and backups
		echo "cp $file junk.$count"
		cp $file junk.$count
		sed -f SvnCommit.sed < junk.$count > $file
		diff junk.$count $file
	fi
done
for file in $add_list
do
	echo "svn add $file ?"
done
for file in $delete_list
do
	echo "svn delete $file ?"
done
response=""
while [ "$response" != "c" ] && [ "$response" != "a" ]
do
	read -p "continue [c] or abort [a] ? " response
done
if [ "$response" = "c" ]
then
	for file in $add_list
	do
		svn add $file
	done
	for file in $delete_list
	do
		svn delete $file
	done
	svn commit --file svn.log $add_list $change_list $delete_list
else
	count=0
	for file in $add_list $change_list
	do
		count=`expr $count + 1`
		ext=`echo $file | sed -e "s/.*\././"`
		if \
		[ $file != "CheckIncludeFile"  ] && \
	   	[ $file != "CheckIncludeOmh"   ] && \
	   	[ $file != "SvnCommit"         ] && \
	   	[ $file != "SvnCommit.sed"     ] && \
	   	[ $ext  != ".vcproj"           ] && \
	   	[ $ext  != ".vim"              ]
		then
			# undo the automatic edits
			echo "mv junk.$count $file"
			mv junk.$count $file
		fi
	done
fi
