# Group ADFun member functions that evalute function and derivative values.
#
# SvnCommit: file that made this commit.
# Doc.omh: change file name from Fun.h to ADFun.h.
# ADFun.h: move Fun.h source code here (reorganize documentation).
# FunEval.h: group the ADFun evalaution routines here (from Fun.h).
# Fun.h: move source code to ADFun.h (reorganize documentation).  
# Compare.h: modify links to CompareChange.
# OdeErrControl.h: include OdeErrMaxabs.cpp example.
# CppAD.h: change incldude from Fun.h to ADFun.h.
# CompareChange.omh: separate and improve this documentation.
# Faq.omh: modify links to CompareChange.
# WhatsNew04.omh: modify links to CompareChange.
# WhatsNew05.omh: remove link to Fun.cpp.
# WhatsNew06.omh: users view of the changes.
# ExampleList.omh: remove Fun.cpp and include some missing examples.
# OdeErrMaxabs.cpp: fix a documentation spelling error.
# Fun.cpp: remove this example.
# Example.vcproj: remove Fun.cpp.
# Example.cpp: remove Fun.cpp.
# Independent.cpp: demonstate with multiple simple vector cases.
# Example/Makefile.am: remove Fun.cpp.
# Makefile.am: remove Fun.h and add ADFun.h, FunEval.h.
add_list="
	CppAD/local/ADFun.h
	CppAD/local/FunEval.h
	omh/CompareChange.omh
"
change_list="
	SvnCommit
	Doc.omh
	CppAD/local/Compare.h
	CppAD/OdeErrControl.h
	CppAD/CppAD.h
	omh/Faq.omh
	omh/WhatsNew04.omh
	omh/WhatsNew05.omh
	omh/WhatsNew06.omh
	omh/ExampleList.omh
	Example/OdeErrMaxabs.cpp
	Example/Example.vcproj
	Example/Example.cpp
	Example/Independent.cpp
	Example/Makefile.am
	Makefile.am
"
delete_list="
	Example/Fun.cpp
	CppAD/local/Fun.h
"
#----------------------------------------------------------------------
# Edit section above for individual cases, section below stays the same
#----------------------------------------------------------------------
sed -e "/^[^#]/d" -e "s/^[#] *//" < SvnCommit > svn.log
count=0
for file in $add_list $change_list
do
	count=`expr $count + 1`
	ext=`echo $file | sed -e "s/.*\././"`
	if \
	[ $file != "CheckIncludeFile"  ] && \
	[ $file != "CheckIncludeOmh"   ] && \
	[ $file != "SvnCommit"         ] && \
	[ $file != "SvnCommit.sed"     ] && \
	[ $ext  != ".vcproj"           ] && \
	[ $ext  != ".vim"              ]
	then
		# automatic edits and backups
		echo "cp $file junk.$count"
		cp $file junk.$count
		sed -f SvnCommit.sed < junk.$count > $file
		diff junk.$count $file
	fi
done
for file in $add_list
do
	echo "svn add $file ?"
done
for file in $delete_list
do
	echo "svn delete $file ?"
done
response=""
while [ "$response" != "c" ] && [ "$response" != "a" ]
do
	read -p "continue [c] or abort [a] ? " response
done
if [ "$response" = "c" ]
then
	for file in $add_list
	do
		svn add $file
	done
	for file in $delete_list
	do
		svn delete $file
	done
	svn commit --file svn.log $add_list $change_list $delete_list
else
	count=0
	for file in $add_list $change_list
	do
		count=`expr $count + 1`
		ext=`echo $file | sed -e "s/.*\././"`
		if \
		[ $file != "CheckIncludeFile"  ] && \
	   	[ $file != "CheckIncludeOmh"   ] && \
	   	[ $file != "SvnCommit"         ] && \
	   	[ $file != "SvnCommit.sed"     ] && \
	   	[ $ext  != ".vcproj"           ] && \
	   	[ $ext  != ".vim"              ]
		then
			# undo the automatic edits
			echo "mv junk.$count $file"
			mv junk.$count $file
		fi
	done
fi
