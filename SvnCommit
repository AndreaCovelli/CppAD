# Improve documentation and example for pow function.
#
# SvnCommit: file that preformed this commit.
# PowInt.h: move integer pow case to library and make more general.
# Atan2.h: include definitions for float and double in CppAD namespace.
# Define.h: remove standard math definitions which were no longer used.
# Erf.h: improve documentaiton.
# StdMathUnary.h: change complex to std::complex in documentation.
# Pow.h: improve documentation and move integer case to library.
# CppAD.h: add PowInt.h to list of includes.
# WhatsNew03.omh: correct a cross reference.
# WhatsNew06.omh: users view of the changes.
# library.omh: add PowInt to library.
# Pow.cpp: move Example/Pow.cpp -> TestMore/Pow.cpp, new Example/Pow.cpp.
# PowInt.cpp: Example/PowInt.cpp->TestMore/PowInt.cpp, new Example/PowInt.cpp.
# TestMore.cpp: include Pow.cpp and PowInt.cpp.
# TestMore.vcproj: include Pow.cpp and PowInt.cpp.
# TestMore/Makefile.am: include Pow.cpp and PowInt.cpp.
# Makefile.am: add PowInt.h to distribution.
#
add_list="
	CppAD/PowInt.h
	TestMore/Pow.cpp
	TestMore/PowInt.cpp
"
change_list="
	SvnCommit
	CppAD/local/Atan2.h
	CppAD/local/Define.h
	CppAD/local/Erf.h
	CppAD/local/StdMathUnary.h
	CppAD/local/Pow.h
	CppAD/CppAD.h
	omh/WhatsNew03.omh
	omh/WhatsNew06.omh
	omh/library.omh
	Example/Pow.cpp
	Example/PowInt.cpp
	TestMore/TestMore.cpp
	TestMore/TestMore.vcproj
	TestMore/Makefile.am
	Makefile.am
"
delete_list="
"
#----------------------------------------------------------------------
# Edit section above for individual cases, section below stays the same
#----------------------------------------------------------------------
sed -e "/^[^#]/d" -e "s/^[#] *//" < SvnCommit > svn.log
count=0
for file in $add_list $change_list
do
	count=`expr $count + 1`
	ext=`echo $file | sed -e "s/.*\././"`
	if \
	[ $file != "CheckIncludeFile"  ] && \
	[ $file != "CheckIncludeOmh"   ] && \
	[ $file != "SvnCommit"         ] && \
	[ $file != "SvnCommit.sed"     ] && \
	[ $ext  != ".vcproj"           ] && \
	[ $ext  != ".vim"              ]
	then
		# automatic edits and backups
		echo "cp $file junk.$count"
		cp $file junk.$count
		sed -f SvnCommit.sed < junk.$count > $file
		diff junk.$count $file
	fi
done
for file in $add_list
do
	echo "svn add $file ?"
done
for file in $delete_list
do
	echo "svn delete $file ?"
done
response=""
while [ "$response" != "c" ] && [ "$response" != "a" ]
do
	read -p "continue [c] or abort [a] ? " response
done
if [ "$response" = "c" ]
then
	for file in $add_list
	do
		svn add $file
	done
	for file in $delete_list
	do
		svn delete $file
	done
	svn commit --file svn.log $add_list $change_list $delete_list
else
	count=0
	for file in $add_list $change_list
	do
		count=`expr $count + 1`
		ext=`echo $file | sed -e "s/.*\././"`
		if \
		[ $file != "CheckIncludeFile"  ] && \
	   	[ $file != "CheckIncludeOmh"   ] && \
	   	[ $file != "SvnCommit"         ] && \
	   	[ $file != "SvnCommit.sed"     ] && \
	   	[ $ext  != ".vcproj"           ] && \
	   	[ $ext  != ".vim"              ]
		then
			# undo the automatic edits
			echo "mv junk.$count $file"
			mv junk.$count $file
		fi
	done
fi
