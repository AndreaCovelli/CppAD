<html><head>
<title>ADTape: The CppAD Tape</title>
<meta name="description" content="ADTape: The CppAD Tape">
<meta name="keywords" content=" description state rec erase Erase "><style type='text/css'>
BODY { color : black }
BODY { background-color : white }
</style>
</head>
<body>
<div align='right'>&nbsp;&nbsp;This:&nbsp;&nbsp;<a href="adtape.htm" target="_top">section</a>, <a href="adtape_frame2.htm" target="_top">frame</a></div>

<b><big><a name="Description">Description</a></big></b>
<br>
For each <i>Base</i> that is used in connection with
<code><font color="blue"><span style='white-space: nowrap'>AD&lt;</span></font></code><i><span style='white-space: nowrap'>Base</span></i><code><font color="blue"><span style='white-space: nowrap'>&gt;</span></font></code>, 
there must be one and only one object with type
<code><font color="blue"><span style='white-space: nowrap'>ADTape&lt;</span></font></code><i><span style='white-space: nowrap'>Base</span></i><code><font color="blue"><span style='white-space: nowrap'>&gt;</span></font></code>.
This object is used to record 
<code><font color="blue"><span style='white-space: nowrap'>AD&lt;</span></font></code><i><span style='white-space: nowrap'>Base</span></i><code><font color="blue"><span style='white-space: nowrap'>&gt;</span></font></code> operations and compute derivatives.

<br>
<br>
<b><big><a name="state">state</a></big></b>
<br>
The field
<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TapeState&nbsp;</span></font></code><i><span style='white-space: nowrap'>Tape</span></i><code><font color="blue"><span style='white-space: nowrap'>.state<br>
</span></font></code>contains the current state of the tape.
The function
<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TapeState&nbsp;</span></font></code><i><span style='white-space: nowrap'>Tape</span></i><code><font color="blue"><span style='white-space: nowrap'>.State(void)&nbsp;const<br>
</span></font></code>can be used to access this value.

<br>
<br>
<b><big><a name="Rec">Rec</a></big></b>
<br>
the <a href="taperec.htm" target="_top"><span style='white-space: nowrap'>TapeRec</span></a>
 object <code><font color="blue"></font></code><i><span style='white-space: nowrap'>Tape</span></i><code><font color="blue"><span style='white-space: nowrap'>.Rec</span></font></code> contains
the currently recorded information.
This information is recorded using the following functions:

<br>
<br>
<b><a name="Rec.Empty OpCode">Empty OpCode</a></b>
<br>
The procedure call
<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;void&nbsp;</span></font></code><i><span style='white-space: nowrap'>Tape</span></i><code><font color="blue"><span style='white-space: nowrap'>.RecordNonOp()<br>
</span></font></code>places a NonOp in the next tape location.
This is useful for operations that must reserve extra
calculation space for forward and backward modes.

<br>
<br>
<b><a name="Rec.Printing OpCode">Printing OpCode</a></b>
<br>
The procedure call
<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;void&nbsp;</span></font></code><i><span style='white-space: nowrap'>Tape</span></i><code><font color="blue"><span style='white-space: nowrap'>.RecordPripOp(const&nbsp;char&nbsp;*</span></font></code><i><span style='white-space: nowrap'>text</span></i><code><font color="blue"><span style='white-space: nowrap'>,&nbsp;const&nbsp;</span></font></code><i><span style='white-space: nowrap'>Base</span></i><code><font color="blue"><span style='white-space: nowrap'>&nbsp;&amp;</span></font></code><i><span style='white-space: nowrap'>x</span></i><code><font color="blue"><span style='white-space: nowrap'>)<br>
</span></font></code>places, in the next tape location,
a PripOp that prints the parameter
value <i>x</i> to standard output.
The procedure call
<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;void&nbsp;</span></font></code><i><span style='white-space: nowrap'>Tape</span></i><code><font color="blue"><span style='white-space: nowrap'>.RecordPrivOp(const&nbsp;char&nbsp;*</span></font></code><i><span style='white-space: nowrap'>text</span></i><code><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font></code><i><span style='white-space: nowrap'>x_index</span></i><code><font color="blue"><span style='white-space: nowrap'>)<br>
</span></font></code>places, in the next tape location,
a PrivOp that prints the variable
corresponding to <i>x_index</i> to standard output.
These operators enables the user to determine the value of intermediate
variables during forward and reverse mode.


<br>
<br>
<b><a name="Rec.Parameter">Parameter</a></b>
<br>
The procedure call
<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size_t&nbsp;</span></font></code><i><span style='white-space: nowrap'>Tape</span></i><code><font color="blue"><span style='white-space: nowrap'>.RecordParOp(const&nbsp;</span></font></code><i><span style='white-space: nowrap'>Base</span></i><code><font color="blue"><span style='white-space: nowrap'>&nbsp;&amp;</span></font></code><i><span style='white-space: nowrap'>z</span></i><code><font color="blue"><span style='white-space: nowrap'>)<br>
</span></font></code>creates a <code><font color="blue">ParOp</font></code> record with the value 
specified by <i>z</i>.
The return value is the index of this operation in the tape.

<br>
<br>
<b><a name="Rec.Independent">Independent</a></b>
<br>
The procedure call
<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;void&nbsp;</span></font></code><i><span style='white-space: nowrap'>Tape</span></i><code><font color="blue"><span style='white-space: nowrap'>.RecordInvOp(AD&lt;</span></font></code><i><span style='white-space: nowrap'>Base</span></i><code><font color="blue"><span style='white-space: nowrap'>&gt;&nbsp;&amp;</span></font></code><i><span style='white-space: nowrap'>z</span></i><code><font color="blue"><span style='white-space: nowrap'>)<br>
</span></font></code>creates a tape record corresponding to a new independent variable.
The field <code><font color="blue"></font></code><i><span style='white-space: nowrap'>z</span></i><code><font color="blue"><span style='white-space: nowrap'>.value</span></font></code> is an input and all the other
fields of <i>z</i> are outputs.
Upon return from <code><font color="blue">RecordInvOp</font></code>, 
<i>z</i> is in the list of variables and
<code><font color="blue"></font></code><i><span style='white-space: nowrap'>z</span></i><code><font color="blue"><span style='white-space: nowrap'>.index</span></font></code> 
is the index of the new tape record. 
<code><span style='white-space: nowrap'><br>
<br>
</span></code>The tape state must be Empty.
On input, the value <code><font color="blue"></font></code><i><span style='white-space: nowrap'>z</span></i><code><font color="blue"><span style='white-space: nowrap'>.index</span></font></code> must be zero. 

<br>
<br>
<b><a name="Rec.Loading Vector Element">Loading Vector Element</a></b>
<br>
The procedure call
<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;void&nbsp;</span></font></code><i><span style='white-space: nowrap'>Tape</span></i><code><font color="blue"><span style='white-space: nowrap'>.RecordLoadOp(<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;OpCode&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font></code><i><span style='white-space: nowrap'>op</span></i><code><font color="blue"><span style='white-space: nowrap'>,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AD&lt;</span></font></code><i><span style='white-space: nowrap'>Base</span></i><code><font color="blue"><span style='white-space: nowrap'>&gt;&nbsp;&amp;</span></font></code><i><span style='white-space: nowrap'>z</span></i><code><font color="blue"><span style='white-space: nowrap'>,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size_t&nbsp;&nbsp;&nbsp;&nbsp;</span></font></code><i><span style='white-space: nowrap'>offset</span></i><code><font color="blue"><span style='white-space: nowrap'>,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size_t&nbsp;&nbsp;&nbsp;&nbsp;</span></font></code><i><span style='white-space: nowrap'>x_index</span></i><code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br>
</span></font></code>creates a tape record corresponding to the value of a <code><font color="blue">VecAD</font></code> element.
<code><font color="blue"><span style='white-space: nowrap'><br>
<br>
</span></font></code><i><span style='white-space: nowrap'>op</span></i><code><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>Must be one of the following values:
<code><font color="blue">LdvOp</font></code>, <code><font color="blue">LdpOp</font></code>.
<code><font color="blue"><span style='white-space: nowrap'><br>
<br>
</span></font></code><i><span style='white-space: nowrap'>offset</span></i><code><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>is the offset where this <code><font color="blue">VecAD</font></code> array
starts in the cumulative array containing all the <code><font color="blue">VecAD</font></code> arrays.
It indexes the length of this <code><font color="blue">VecAD</font></code> array 
and the rest of the array follows.
<code><font color="blue"><span style='white-space: nowrap'><br>
<br>
</span></font></code><i><span style='white-space: nowrap'>x_index</span></i><code><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>provides the information necessary to retriever the index in for this 
element within the <code><font color="blue">VecAD</font></code> array.
This has the following meaning depending on the value of <i>op</i>:
<table><tr><td align='left'  valign='top'>

<b>op</b>    
	</td><td align='left'  valign='top'>
 <b>x_index</b> </td></tr><tr><td align='left'  valign='top'>

<code><font color="blue">LdpOp</font></code> 
	</td><td align='left'  valign='top'>
 location of the index in <code><font color="blue"></font></code><i><span style='white-space: nowrap'>Rec</span></i><code><font color="blue"><span style='white-space: nowrap'>.GetPar</span></font></code> </td></tr><tr><td align='left'  valign='top'>

<code><font color="blue">LdvOp</font></code> 
	</td><td align='left'  valign='top'>
 location of the index as a variable in the tape
</td></tr>
</table>
<code><font color="blue"><span style='white-space: nowrap'><br>
<br>
</span></font></code><i><span style='white-space: nowrap'>z</span></i><code><font color="blue"><span style='white-space: nowrap'>.index<br>
</span></font></code>is modified so that it corresponds to the new tape record when 
<code><font color="blue">RecordLoadOp</font></code> returns.
Upon return from <code><font color="blue">RecordLoadOp</font></code>, 
<i>z</i> is in the list of variables and
<code><font color="blue"></font></code><i><span style='white-space: nowrap'>z</span></i><code><font color="blue"><span style='white-space: nowrap'>.index</span></font></code> 
is the index in the tape for this <i>op</i> operator. 


<br>
<br>
<b><a name="Rec.Storing Vector Element">Storing Vector Element</a></b>
<br>
The procedure call
<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;void&nbsp;</span></font></code><i><span style='white-space: nowrap'>Tape</span></i><code><font color="blue"><span style='white-space: nowrap'>.RecordStoreOp(<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;OpCode&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font></code><i><span style='white-space: nowrap'>op</span></i><code><font color="blue"><span style='white-space: nowrap'>,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AD&lt;</span></font></code><i><span style='white-space: nowrap'>Base</span></i><code><font color="blue"><span style='white-space: nowrap'>&gt;&nbsp;&amp;</span></font></code><i><span style='white-space: nowrap'>z</span></i><code><font color="blue"><span style='white-space: nowrap'>,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size_t&nbsp;&nbsp;&nbsp;&nbsp;</span></font></code><i><span style='white-space: nowrap'>offset</span></i><code><font color="blue"><span style='white-space: nowrap'>,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size_t&nbsp;&nbsp;&nbsp;&nbsp;</span></font></code><i><span style='white-space: nowrap'>x_index</span></i><code><font color="blue"><span style='white-space: nowrap'>,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size_t&nbsp;&nbsp;&nbsp;&nbsp;</span></font></code><i><span style='white-space: nowrap'>y_index</span></i><code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br>
</span></font></code>creates a tape record corresponding to storing a new value for
a <code><font color="blue">VecAD</font></code> element.
<code><font color="blue"><span style='white-space: nowrap'><br>
<br>
</span></font></code><i><span style='white-space: nowrap'>op</span></i><code><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>Must be one of the following values:
<code><font color="blue">StvvOp</font></code>, <code><font color="blue">StpvOp</font></code>.
<code><font color="blue"><span style='white-space: nowrap'><br>
<br>
</span></font></code><i><span style='white-space: nowrap'>offset</span></i><code><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>is the offset where this <code><font color="blue">VecAD</font></code> array
starts in the cumulative array containing all the <code><font color="blue">VecAD</font></code> arrays.
It indexes the length of this <code><font color="blue">VecAD</font></code> array 
and the rest of the array follows.
<code><font color="blue"><span style='white-space: nowrap'><br>
<br>
</span></font></code><i><span style='white-space: nowrap'>x_index</span></i><code><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>provides the information necessary to retrieve the index for this 
<code><font color="blue">VecAD</font></code> element within this <code><font color="blue">VecAD</font></code> array.
This has the following meaning depending on the value of <i>op</i>:
<table><tr><td align='left'  valign='top'>

<b>op</b>    
	</td><td align='left'  valign='top'>
 <b>x_index</b> </td></tr><tr><td align='left'  valign='top'>

<code><font color="blue">StppOp</font></code>
	</td><td align='left'  valign='top'>
 location of the index in <code><font color="blue"></font></code><i><span style='white-space: nowrap'>Rec</span></i><code><font color="blue"><span style='white-space: nowrap'>.GetPar</span></font></code> </td></tr><tr><td align='left'  valign='top'>

<code><font color="blue">StpvOp</font></code>
	</td><td align='left'  valign='top'>
 location of the index in <code><font color="blue"></font></code><i><span style='white-space: nowrap'>Rec</span></i><code><font color="blue"><span style='white-space: nowrap'>.GetPar</span></font></code> </td></tr><tr><td align='left'  valign='top'>

<code><font color="blue">StvpOp</font></code> 
	</td><td align='left'  valign='top'>
 location of the index as a variable in the tape  </td></tr><tr><td align='left'  valign='top'>

<code><font color="blue">StvvOp</font></code> 
	</td><td align='left'  valign='top'>
 location of the index as a variable in the tape 
</td></tr>
</table>
<code><font color="blue"><span style='white-space: nowrap'><br>
<br>
</span></font></code><i><span style='white-space: nowrap'>y_index</span></i><code><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>provides the information necessary to retrieve the value for this 
<code><font color="blue">VecAD</font></code> element within this <code><font color="blue">VecAD</font></code> array.
This has the following meaning depending on the value of <i>op</i>:
<table><tr><td align='left'  valign='top'>

<b>op</b>    
	</td><td align='left'  valign='top'>
 <b>y_index</b> </td></tr><tr><td align='left'  valign='top'>

<code><font color="blue">StppOp</font></code>
	</td><td align='left'  valign='top'>
 location of the value in <code><font color="blue"></font></code><i><span style='white-space: nowrap'>Rec</span></i><code><font color="blue"><span style='white-space: nowrap'>.GetPar</span></font></code> </td></tr><tr><td align='left'  valign='top'>

<code><font color="blue">StvpOp</font></code>
	</td><td align='left'  valign='top'>
 location of the value in <code><font color="blue"></font></code><i><span style='white-space: nowrap'>Rec</span></i><code><font color="blue"><span style='white-space: nowrap'>.GetPar</span></font></code> </td></tr><tr><td align='left'  valign='top'>

<code><font color="blue">StpvOp</font></code> 
	</td><td align='left'  valign='top'>
 location of the index as a variable in the tape  </td></tr><tr><td align='left'  valign='top'>

<code><font color="blue">StvvOp</font></code> 
	</td><td align='left'  valign='top'>
 location of the index as a variable in the tape  
</td></tr>
</table>
<code><font color="blue"><span style='white-space: nowrap'><br>
<br>
</span></font></code><i><span style='white-space: nowrap'>z</span></i><code><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>is modified so that it corresponds to the new tape record.
Upon return from <code><font color="blue">RecordStoreOp</font></code>, 
<i>z</i> is in the list of variables and
<code><font color="blue"></font></code><i><span style='white-space: nowrap'>z</span></i><code><font color="blue"><span style='white-space: nowrap'>.index</span></font></code> 
is the index in the tape for this <i>op</i> operator. 

<br>
<br>
<b><a name="Rec.Op(Variable, Variable)">Op(Variable, Variable)</a></b>
<br>
The procedure call 
<code><font color="blue"><span style='white-space: nowrap'><br>
inline&nbsp;void&nbsp;</span></font></code><i><span style='white-space: nowrap'>Tape</span></i><code><font color="blue"><span style='white-space: nowrap'>.RecordOp(<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;OpCode&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font></code><i><span style='white-space: nowrap'>op</span></i><code><font color="blue"><span style='white-space: nowrap'>,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AD&lt;</span></font></code><i><span style='white-space: nowrap'>Base</span></i><code><font color="blue"><span style='white-space: nowrap'>&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;</span></font></code><i><span style='white-space: nowrap'>z</span></i><code><font color="blue"><span style='white-space: nowrap'>,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size_t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font></code><i><span style='white-space: nowrap'>x_index</span></i><code><font color="blue"><span style='white-space: nowrap'>,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size_t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font></code><i><span style='white-space: nowrap'>y_index</span></i><code><font color="blue"><span style='white-space: nowrap'><br>
)</span></font></code>
places a new dependent variable <i>z</i> in the tape
and sets <code><font color="blue"></font></code><i><span style='white-space: nowrap'>z</span></i><code><font color="blue"><span style='white-space: nowrap'>.index</span></font></code> to the corresponding index.
The tape record specifies the operation
<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font></code><i><span style='white-space: nowrap'>z</span></i><code><font color="blue"><span style='white-space: nowrap'>&nbsp;=&nbsp;</span></font></code><i><span style='white-space: nowrap'>op</span></i><code><font color="blue"><span style='white-space: nowrap'>(</span></font></code><i><span style='white-space: nowrap'>x</span></i><code><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font></code><i><span style='white-space: nowrap'>y</span></i><code><font color="blue"><span style='white-space: nowrap'>)<br>
</span></font></code>where <i>x_index</i> is the index of <i>x</i> in the tape
and <i>y_index</i> is the index of <i>y</i> in the tape
(neither of these indices can be zero).
The field <code><font color="blue"></font></code><i><span style='white-space: nowrap'>z</span></i><code><font color="blue"><span style='white-space: nowrap'>.value</span></font></code> is an input and all the other
fields of <i>z</i> are outputs.
Upon return from <code><font color="blue">RecordOp</font></code>, 
<i>z</i> is in the list of variables and
<code><font color="blue"></font></code><i><span style='white-space: nowrap'>z</span></i><code><font color="blue"><span style='white-space: nowrap'>.index</span></font></code> 
is to the index of the new tape record. 
<code><span style='white-space: nowrap'><br>
<br>
</span></code>The procedure call 
<code><font color="blue"><span style='white-space: nowrap'><br>
inline&nbsp;void&nbsp;</span></font></code><i><span style='white-space: nowrap'>Tape</span></i><code><font color="blue"><span style='white-space: nowrap'>.RecordOp(<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;OpCode&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font></code><i><span style='white-space: nowrap'>op</span></i><code><font color="blue"><span style='white-space: nowrap'>,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size_t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font></code><i><span style='white-space: nowrap'>x_index</span></i><code><font color="blue"><span style='white-space: nowrap'>,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size_t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font></code><i><span style='white-space: nowrap'>y_index</span></i><code><font color="blue"><span style='white-space: nowrap'><br>
)</span></font></code>
is the same as above except that no variable results from the 
tape operation; i.e., <code><font color="blue"><span style='white-space: nowrap'>NumVar(</span></font></code><i><span style='white-space: nowrap'>op</span></i><code><font color="blue"><span style='white-space: nowrap'>)</span></font></code> is zero.

<br>
<br>
<b><a name="Rec.Op(Variable, Parameter)">Op(Variable, Parameter)</a></b>
<br>
The procedure call 
<code><font color="blue"><span style='white-space: nowrap'><br>
inline&nbsp;void&nbsp;</span></font></code><i><span style='white-space: nowrap'>Tape</span></i><code><font color="blue"><span style='white-space: nowrap'>.RecordOp(<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;OpCode&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font></code><i><span style='white-space: nowrap'>op</span></i><code><font color="blue"><span style='white-space: nowrap'>,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AD&lt;</span></font></code><i><span style='white-space: nowrap'>Base</span></i><code><font color="blue"><span style='white-space: nowrap'>&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;</span></font></code><i><span style='white-space: nowrap'>z</span></i><code><font color="blue"><span style='white-space: nowrap'>,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size_t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font></code><i><span style='white-space: nowrap'>x_index</span></i><code><font color="blue"><span style='white-space: nowrap'>,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;</span></font></code><i><span style='white-space: nowrap'>Base</span></i><code><font color="blue"><span style='white-space: nowrap'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;</span></font></code><i><span style='white-space: nowrap'>p</span></i><code><font color="blue"><span style='white-space: nowrap'>&nbsp;<br>
)</span></font></code>
places a new dependent variable <i>z</i> in the tape
and sets <code><font color="blue"></font></code><i><span style='white-space: nowrap'>z</span></i><code><font color="blue"><span style='white-space: nowrap'>.index</span></font></code> to the corresponding index.
The tape record specifies the operation
<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font></code><i><span style='white-space: nowrap'>z</span></i><code><font color="blue"><span style='white-space: nowrap'>&nbsp;=&nbsp;</span></font></code><i><span style='white-space: nowrap'>op</span></i><code><font color="blue"><span style='white-space: nowrap'>(</span></font></code><i><span style='white-space: nowrap'>x</span></i><code><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font></code><i><span style='white-space: nowrap'>p</span></i><code><font color="blue"><span style='white-space: nowrap'>)<br>
</span></font></code>where <i>x_index</i> is the index of <i>x</i> in the tape
(this index can not be zero).
The field <code><font color="blue"></font></code><i><span style='white-space: nowrap'>z</span></i><code><font color="blue"><span style='white-space: nowrap'>.value</span></font></code> is an input and all the other
fields of <i>z</i> are outputs.
Upon return from <code><font color="blue">RecordOp</font></code>, 
<i>z</i> is in the list of variables and
<code><font color="blue"></font></code><i><span style='white-space: nowrap'>z</span></i><code><font color="blue"><span style='white-space: nowrap'>.index</span></font></code> 
is to the index of the new tape record. 
The value <i>p</i> corresponds to a parameter.
<code><span style='white-space: nowrap'><br>
<br>
</span></code>The procedure call 
<code><font color="blue"><span style='white-space: nowrap'><br>
inline&nbsp;void&nbsp;</span></font></code><i><span style='white-space: nowrap'>Tape</span></i><code><font color="blue"><span style='white-space: nowrap'>.RecordOp(<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;OpCode&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font></code><i><span style='white-space: nowrap'>op</span></i><code><font color="blue"><span style='white-space: nowrap'>,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size_t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font></code><i><span style='white-space: nowrap'>x_index</span></i><code><font color="blue"><span style='white-space: nowrap'>,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;</span></font></code><i><span style='white-space: nowrap'>Base</span></i><code><font color="blue"><span style='white-space: nowrap'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;</span></font></code><i><span style='white-space: nowrap'>p</span></i><code><font color="blue"><span style='white-space: nowrap'>&nbsp;<br>
)</span></font></code>
is the same as above except that no variable results from the 
tape operation; i.e., <code><font color="blue"><span style='white-space: nowrap'>NumVar(</span></font></code><i><span style='white-space: nowrap'>op</span></i><code><font color="blue"><span style='white-space: nowrap'>)</span></font></code> is zero.

<br>
<br>
<b><a name="Rec.Op(Parameter, Variable)">Op(Parameter, Variable)</a></b>
<br>
The procedure call 
<code><font color="blue"><span style='white-space: nowrap'><br>
inline&nbsp;void&nbsp;</span></font></code><i><span style='white-space: nowrap'>Tape</span></i><code><font color="blue"><span style='white-space: nowrap'>.RecordOp(<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;OpCode&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font></code><i><span style='white-space: nowrap'>op</span></i><code><font color="blue"><span style='white-space: nowrap'>,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AD&lt;</span></font></code><i><span style='white-space: nowrap'>Base</span></i><code><font color="blue"><span style='white-space: nowrap'>&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;</span></font></code><i><span style='white-space: nowrap'>z</span></i><code><font color="blue"><span style='white-space: nowrap'>,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;</span></font></code><i><span style='white-space: nowrap'>Base</span></i><code><font color="blue"><span style='white-space: nowrap'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;</span></font></code><i><span style='white-space: nowrap'>p</span></i><code><font color="blue"><span style='white-space: nowrap'>,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size_t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font></code><i><span style='white-space: nowrap'>y_index</span></i><code><font color="blue"><span style='white-space: nowrap'><br>
)</span></font></code>
places a new dependent variable <i>z</i> in the tape
and sets <code><font color="blue"></font></code><i><span style='white-space: nowrap'>z</span></i><code><font color="blue"><span style='white-space: nowrap'>.index</span></font></code> to the corresponding index.
The tape record specifies the operation
<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font></code><i><span style='white-space: nowrap'>z</span></i><code><font color="blue"><span style='white-space: nowrap'>&nbsp;=&nbsp;</span></font></code><i><span style='white-space: nowrap'>op</span></i><code><font color="blue"><span style='white-space: nowrap'>(</span></font></code><i><span style='white-space: nowrap'>p</span></i><code><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font></code><i><span style='white-space: nowrap'>y</span></i><code><font color="blue"><span style='white-space: nowrap'>)<br>
</span></font></code>where <i>y_index</i> is the index of <i>y</i> in the tape
(this index can not be zero).
The field <code><font color="blue"></font></code><i><span style='white-space: nowrap'>z</span></i><code><font color="blue"><span style='white-space: nowrap'>.value</span></font></code> is an input and all the other
fields of <i>z</i> are outputs.
Upon return from <code><font color="blue">RecordOp</font></code>, 
<i>z</i> is in the list of variables and
<code><font color="blue"></font></code><i><span style='white-space: nowrap'>z</span></i><code><font color="blue"><span style='white-space: nowrap'>.index</span></font></code> 
is to the index of the new tape record. 
The value <i>p</i> corresponds to a parameter.
<code><span style='white-space: nowrap'><br>
<br>
</span></code>The procedure call 
<code><font color="blue"><span style='white-space: nowrap'><br>
inline&nbsp;void&nbsp;</span></font></code><i><span style='white-space: nowrap'>Tape</span></i><code><font color="blue"><span style='white-space: nowrap'>.RecordOp(<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;OpCode&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font></code><i><span style='white-space: nowrap'>op</span></i><code><font color="blue"><span style='white-space: nowrap'>,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;</span></font></code><i><span style='white-space: nowrap'>Base</span></i><code><font color="blue"><span style='white-space: nowrap'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;</span></font></code><i><span style='white-space: nowrap'>p</span></i><code><font color="blue"><span style='white-space: nowrap'>,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size_t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font></code><i><span style='white-space: nowrap'>y_index</span></i><code><font color="blue"><span style='white-space: nowrap'><br>
)</span></font></code>
is the same as above except that no variable results from the 
tape operation; i.e., <code><font color="blue"><span style='white-space: nowrap'>NumVar(</span></font></code><i><span style='white-space: nowrap'>op</span></i><code><font color="blue"><span style='white-space: nowrap'>)</span></font></code> is zero.

<br>
<br>
<b><a name="Rec.Op(Parameter, Parameter)">Op(Parameter, Parameter)</a></b>
<br>
The procedure call
<code><font color="blue"><span style='white-space: nowrap'><br>
inline&nbsp;void&nbsp;</span></font></code><i><span style='white-space: nowrap'>Tape</span></i><code><font color="blue"><span style='white-space: nowrap'>.RecordOp(<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;OpCode&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font></code><i><span style='white-space: nowrap'>op</span></i><code><font color="blue"><span style='white-space: nowrap'>,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;</span></font></code><i><span style='white-space: nowrap'>Base</span></i><code><font color="blue"><span style='white-space: nowrap'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;</span></font></code><i><span style='white-space: nowrap'>x</span></i><code><font color="blue"><span style='white-space: nowrap'>,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;</span></font></code><i><span style='white-space: nowrap'>Base</span></i><code><font color="blue"><span style='white-space: nowrap'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;</span></font></code><i><span style='white-space: nowrap'>y</span></i><code><font color="blue"><span style='white-space: nowrap'><br>
)</span></font></code>
records an operation between two parameters where
<i>x</i> is the left operand and <i>y</i> is the right operand.
No variable results from the tape operation; 
i.e., <code><font color="blue"><span style='white-space: nowrap'>NumVar(</span></font></code><i><span style='white-space: nowrap'>op</span></i><code><font color="blue"><span style='white-space: nowrap'>)</span></font></code> is zero.

<br>
<br>
<b><a name="Rec.Op(Variable)">Op(Variable)</a></b>
<br>
The procedure call 
<code><font color="blue"><span style='white-space: nowrap'><br>
inline&nbsp;void&nbsp;</span></font></code><i><span style='white-space: nowrap'>Tape</span></i><code><font color="blue"><span style='white-space: nowrap'>.RecordOp(<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;OpCode&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font></code><i><span style='white-space: nowrap'>op</span></i><code><font color="blue"><span style='white-space: nowrap'>,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AD&lt;</span></font></code><i><span style='white-space: nowrap'>Base</span></i><code><font color="blue"><span style='white-space: nowrap'>&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;</span></font></code><i><span style='white-space: nowrap'>z</span></i><code><font color="blue"><span style='white-space: nowrap'>,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size_t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font></code><i><span style='white-space: nowrap'>x_index</span></i><code><font color="blue"><span style='white-space: nowrap'><br>
)</span></font></code>
places a new dependent variable <i>z</i> in the tape
and sets <code><font color="blue"></font></code><i><span style='white-space: nowrap'>z</span></i><code><font color="blue"><span style='white-space: nowrap'>.index</span></font></code> to the corresponding index.
The tape record specifies the operation
<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font></code><i><span style='white-space: nowrap'>z</span></i><code><font color="blue"><span style='white-space: nowrap'>&nbsp;=&nbsp;</span></font></code><i><span style='white-space: nowrap'>op</span></i><code><font color="blue"><span style='white-space: nowrap'>(</span></font></code><i><span style='white-space: nowrap'>x</span></i><code><font color="blue"><span style='white-space: nowrap'>)<br>
</span></font></code>where <i>x_index</i> is the index of <i>x</i> in the tape
(this index can not be zero) and <i>op</i> specifies the
unary function.
The field <code><font color="blue"></font></code><i><span style='white-space: nowrap'>z</span></i><code><font color="blue"><span style='white-space: nowrap'>.value</span></font></code> is an input and all the other
fields of <i>z</i> are outputs.
Upon return from <code><font color="blue">RecordOp</font></code>, 
<i>z</i> is in the list of variables and
<code><font color="blue"></font></code><i><span style='white-space: nowrap'>z</span></i><code><font color="blue"><span style='white-space: nowrap'>.index</span></font></code> 
is to the index of the new tape record. 

<br>
<br>
<b><a name="Rec.User Defined Functions">User Defined Functions</a></b>
<br>
The procedure call 
<code><font color="blue"><span style='white-space: nowrap'><br>
void&nbsp;</span></font></code><i><span style='white-space: nowrap'>Tape</span></i><code><font color="blue"><span style='white-space: nowrap'>.RecordDisOp(<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AD&lt;</span></font></code><i><span style='white-space: nowrap'>Base</span></i><code><font color="blue"><span style='white-space: nowrap'>&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;</span></font></code><i><span style='white-space: nowrap'>z</span></i><code><font color="blue"><span style='white-space: nowrap'>,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size_t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font></code><i><span style='white-space: nowrap'>x_index</span></i><code><font color="blue"><span style='white-space: nowrap'>,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size_t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font></code><i><span style='white-space: nowrap'>y_index</span></i><code><font color="blue"><span style='white-space: nowrap'><br>
)</span></font></code>
places a new dependent variable <i>z</i> in the tape
and sets <code><font color="blue"></font></code><i><span style='white-space: nowrap'>z</span></i><code><font color="blue"><span style='white-space: nowrap'>.index</span></font></code> to the corresponding index.
The tape record specifies the operation
<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font></code><i><span style='white-space: nowrap'>z</span></i><code><font color="blue"><span style='white-space: nowrap'>&nbsp;=&nbsp;</span></font></code><i><span style='white-space: nowrap'>f</span></i><code><font color="blue"><span style='white-space: nowrap'>(</span></font></code><i><span style='white-space: nowrap'>x</span></i><code><font color="blue"><span style='white-space: nowrap'>)</span></font></code><i><span style='white-space: nowrap'><br>
</span></i>where <i>x_index</i> is the index of <i>x</i> in the tape
and <i>y_index</i> is the index corresponding to the 
Discrete function <i>f</i>
(the value <i>x_index</i> cannot be zero).
The field <code><font color="blue"></font></code><i><span style='white-space: nowrap'>z</span></i><code><font color="blue"><span style='white-space: nowrap'>.value</span></font></code> is an input and all the other
fields of <i>z</i> are outputs.
Upon return from <code><font color="blue">RecordDisOp</font></code>, 
<i>z</i> is in the list of variables and
<code><font color="blue"></font></code><i><span style='white-space: nowrap'>z</span></i><code><font color="blue"><span style='white-space: nowrap'>.index</span></font></code> 
is to the index of the new tape record. 

<br>
<br>
<b><a name="Rec.Variable Indexed Arrays">Variable Indexed Arrays</a></b>
<br>
The procedure call
<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size_t&nbsp;</span></font></code><i><span style='white-space: nowrap'>Tape</span></i><code><font color="blue"><span style='white-space: nowrap'>.AddVec(size_t&nbsp;&nbsp;</span></font></code><i><span style='white-space: nowrap'>length</span></i><code><font color="blue"><span style='white-space: nowrap'>,&nbsp;const&nbsp;</span></font></code><i><span style='white-space: nowrap'>Base</span></i><code><font color="blue"><span style='white-space: nowrap'>&nbsp;*</span></font></code><i><span style='white-space: nowrap'>data</span></i><code><font color="blue"><span style='white-space: nowrap'>)<br>
</span></font></code>adds a variable indexed array with the specified length and values to the tape.
We use <i>i</i> to denote the value returned by <code><font color="blue">AddVec</font></code>.
The value <i>length</i> is added to <i>Rec</i> as follows:
<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font></code><i><span style='white-space: nowrap'>length</span></i><code><font color="blue"><span style='white-space: nowrap'>&nbsp;==&nbsp;</span></font></code><i><span style='white-space: nowrap'>Rec</span></i><code><font color="blue"><span style='white-space: nowrap'>.GetVecInd(</span></font></code><i><span style='white-space: nowrap'>i</span></i><code><font color="blue"><span style='white-space: nowrap'>)<br>
</span></font></code>Upon return, 
the elements of <i>data</i> are stored in <i>Rec</i>
in the following way:
for <code>
<span style='white-space: nowrap'>&nbsp;j&nbsp;=&nbsp;0&nbsp;,&nbsp;\ldots&nbsp;,&nbsp;length-1</span></code>
,
<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font></code><i><span style='white-space: nowrap'>data</span></i><code><font color="blue"><span style='white-space: nowrap'>[</span></font></code><i><span style='white-space: nowrap'>j</span></i><code><font color="blue"><span style='white-space: nowrap'>]&nbsp;==&nbsp;</span></font></code><i><span style='white-space: nowrap'>Rec</span></i><code><font color="blue"><span style='white-space: nowrap'>.GetVecInd(</span></font></code><i><span style='white-space: nowrap'>i</span></i><code><font color="blue"><span style='white-space: nowrap'>&nbsp;+&nbsp;</span></font></code><i><span style='white-space: nowrap'>j</span></i><code><font color="blue"><span style='white-space: nowrap'>&nbsp;+&nbsp;1)<br>
</span></font></code><br>
<b><big><a name="Erase">Erase</a></big></b>

<br>
The operation 
<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;void&nbsp;</span></font></code><i><span style='white-space: nowrap'>Tape</span></i><code><font color="blue"><span style='white-space: nowrap'>.Erase(void)<br>
</span></font></code>erases all the information stored in the CppAD tape.
After this operation the tape is in the Empty state.
When the tape is in the Empty state,
all <code><font color="blue"><span style='white-space: nowrap'>AD&lt;</span></font></code><i><span style='white-space: nowrap'>Type&gt;</span></i> objects are parameters (not variables). 
This is the initial state of the tape and an <code><font color="blue">Erase</font></code>
is often preformed as soon as one is done with 
a CppAD function that is stored in the tape.


<hr>Input File: CppAD\local\ADTape.h

</body>
</html>
