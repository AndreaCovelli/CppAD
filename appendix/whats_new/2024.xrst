# SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-or-later
# SPDX-FileCopyrightText: Bradley M. Bell <bradbell@seanet.com>
# SPDX-FileContributor: 2003-23 Bradley M. Bell
# ----------------------------------------------------------------------------

{xrst_begin 2024 app}
{xrst_spell
   cmd
   dll
   svec
   py
   dismod
   yyyy
   yy
   usr
   env
   bostvector
   boostvector
}

Release Notes for 2024
######################

mm-dd
*****

02-22
=====
#. The shebang in the :ref:`configure-name` script was changed from
   ``#! /bin/bash`` to ``#! /usr/bin/env bash`` .
   This should make it work on more systems.
#. The configure script :ref:`configure@eigen_dir` ,
   *fadbad_dir* , and *sacado_dir*
   directories were not being passed to the ``cmake`` .
   This has been fixed.
#. The configure ``--help`` option for using boost vectors
   was corrected from  ``--with-bostvector`` to ``--with-boostvector`` .

02-21
=====
For each year, change the web page name ``whats_new_``\ *yy*
to *yyyy* where *yy* and *yyyy* identify the year. In addition, change the
title for these pages to Release Notes for the corresponding year.
This breaks old links to these web pages.
For example, the old link to the heading directly below was::

   https://cppad.readthedocs.io/latest/whats_new_24.html#whats-new-24-mm-dd-02-14

Its new link, which is much shorter, is::

   https://cppad.readthedocs.io/latest/2024.html#mm-dd-02-14

02-14
=====
The :ref:`optimize-name` routine could crash when
checking if an operator with the same hash code was a match with the
argument order switched (for add and multiply).
This problem occurred during speed.py_ ,
which is an example and test of dismod_at, which uses CppAD.
This crash required a very special (and improbable) case that we
were unable to reproduce in an automated regression test;
see comment that starts with 2024-02-14 in
`include/cppad/local/optimize/match_op.hpp` .

.. _speed.py: https://dismod-at.readthedocs.io/user_speed.py.html

01-16
=====
fix dll linking of jit code by changing *cppad_c_compiler_path* to
*cppad_c_compiler_cmd* (spaces in the path were making commands fail).

01-12
=====
#. There were some problems using the cmake C compiler for the
   examples and tests of jit compilation, so that has been backed out for now.
#. There was a mistake in detecting if size_t is the same as
   :ref:`cmake@cppad_tape_addr_type`. This could cause a compile error
   in `op_hash_table.hpp` and has been fixed.

01-11
=====
Use the *cppad_c_compiler_path* detected by :ref:`cmake-name`
to run the C compiler for the Clang and GNU cases; see
the `create_dll_lib`` defaults for
:ref:`create_dll_lib@options@compile` and
:ref:`create_dll_lib@options@link` .

01-10
=====
#. Fix some problems with the install on 32 bit systems.
   To be specific, the :ref:`thread_alloc-name` memory allocator
   was not properly aligning doubles.
#. Suppress the test of the ``svec_setvec`` class.
   (The class has a bug and is not currently being used.)

01-08
=====
On some systems ``unsigned int`` and ``size_t`` are the same type
and this would cause a compile error in ``vector.hpp`` and
``vector_bool.hpp`` . This has been fixed.

01-07
=====
The forward_two :ref:`forward_two@Syntax` was corrected.
To be specific,
``Forward`` (1, *x2* ) was changed to ``Forward`` (2, *x2* ) .
In addition, some other minor improvements were made to the
forward_two documentation page.

01-03
=====

#. The change on :ref:`2023@mm-dd@12-24` 2023,
   when :ref:`cmake@cppad_debug_and_release` was implemented,
   was not done properly and might cause a mistaken assertion.
   This has been fixed.

#. Each *file_name* in the latest documentation was moved
   (this is important if you have links to previous web pages):

   .. list-table::

      *  - Old Location
         - ``https://cppad.readthedocs.io/``\ *file_name*
      *  - New Location
         - ``https://cppad.readthedocs.io/latest/``\ *file_name*

01-02
=====

#. The :ref:`compare_change.cpp-name` example/test would sometimes fail
   when :ref:`cmake@cppad_debug_which` was ``debug_even`` or
   ``debug_odd`` (because it was compiled for debugging and including
   a release version of a utility). This has been fixed by making this
   example/test a separate program.

#. The :ref:`CppAD_vector@vectorBool` constructor would generate a
   warning when called with an ``int`` for the size of the vector
   (on some compilers). This has been fixed.


{xrst_end 2024}
